{"version":3,"file":"static/js/649.a0de89b5.chunk.js","mappings":"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","sources":["components/ui/discussion/Discussion.tsx","components/ui/discussion/DiscussionContent.tsx","components/ui/discussion/DiscussionSidebar.tsx","components/ui/discussion/DiscussionSidebarItem.tsx","components/ui/discussion/DiscussionItem.tsx","components/ui/discussion/DiscussionItemAvatar.tsx","components/ui/discussion/DiscussionItemContent.tsx","components/ui/discussion/DiscussionItemContentHeader.tsx","components/ui/discussion/DiscussionTimelineItem.tsx","components/ui/discussion/DiscussionTimelineItemBadge.tsx","components/ui/discussion/DiscussionTimelineItemBody.tsx","components/ui/discussion/AdditionalInformation.tsx","components/ui/discussion/AdditionalInformationSummary.tsx","components/ui/discussion/AdditionalInformationDetails.tsx","components/Discussion.tsx","pages/home/experience.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst Discussion = styled(React.forwardRef<HTMLDivElement, DiscussionUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion\"}\n    ref={ref}\n    data-testid=\"discussion\"\n    {...rest}\n  />\n)))(({theme}) => ({\n  '&': {\n    'display': 'flex',\n    'flexWrap': 'nowrap',\n    'gap': 24,\n    'alignItems': 'end',\n    [theme.breakpoints.up('xs')]: {\n      'flexDirection': 'column-reverse'\n    },\n    [theme.breakpoints.up('laptop')]: {\n      'flexDirection': 'row'\n    },\n\n    '.discussion-username': {\n      'fontWeight': 900,\n      'color': '#c9d1d9',\n    },\n    '.discussion-content': {\n      [theme.breakpoints.up('xs')]: {\n        'flexBasis': '100%',\n      },\n      [theme.breakpoints.up('laptop')]: {\n        'flexBasis': '74%',\n        'flexGrow': '0',\n        'maxWidth': '74%',\n      },\n    },\n    '.discussion-sidebar': {\n      [theme.breakpoints.up('xs')]: {\n        'flexBasis': '100%',\n        'width': '100%',\n        'boxSizing': 'border-box',\n        'paddingLeft': '56px'\n      },\n      [theme.breakpoints.up('laptop')]: {\n        'flexBasis': '24%',\n        'flexGrow': '0',\n        'maxWidth': '24%',\n        'paddingLeft': '0px'\n      },\n    }\n  }\n}))\n\nexport default Discussion\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionContentUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionContent = styled(React.forwardRef<HTMLDivElement, DiscussionContentUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-content\"}\n    ref={ref}\n    data-testid=\"discussion-content\"\n    {...rest}\n  />\n)))`\n& {\n  margin: 0 0 0 40px;\n  padding-left: 16px;\n  border-bottom: 2px solid #30363d;\n}\n`\n\nexport default DiscussionContent\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionSidebarUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionSidebar = styled(React.forwardRef<HTMLDivElement, DiscussionSidebarUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-sidebar\"}\n    ref={ref}\n    data-testid=\"discussion-sidebar\"\n    {...rest}\n  />\n)))`\n& {\n  margin: 0;\n}\n`\n\nexport default DiscussionSidebar\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionSidebarItemUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionSidebarItem = styled(React.forwardRef<HTMLDivElement, DiscussionSidebarItemUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-sidebar-item\"}\n    data-testid=\"discussion-sidebar-item\"\n    {...rest}\n  />\n)))`\n& {\n  padding-top: 16px;\n  font-size: 12px;\n  color: #8b949e;\n}\n&+& {\n  margin-top: 16px;\n  border-top: 1px solid #21262d;\n}\n& .discussion-sidebar-item-header {\n  font-weight: 900;\n  margin-bottom: 8px;\n  color: #c9d1d9;\n}\n`\n\nexport default DiscussionSidebarItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionItemUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionItem = styled(React.forwardRef<HTMLDivElement, DiscussionItemUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-item\"}\n    ref={ref}\n    data-testid=\"discussion-item\"\n    {...rest}\n  />\n)))`\n& {\n  position: relative;\n  display: flex;\n  padding-bottom: 16px;\n  margin-left: 16px;\n  width: 100%;\n}\n&:before {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 2px;\n  content: \"\";\n  background-color: #21262d;\n}\n`\n\nexport default DiscussionItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionItemAvatarUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionItemAvatar = styled(React.forwardRef<HTMLDivElement, DiscussionItemAvatarUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-item-avatar\"}\n    ref={ref}\n    data-testid=\"discussion-item-avatar\"\n    {...rest}\n  />\n)))`\n& {\n  position: absolute;\n  left: -72px;\n}\n`\n\nexport default DiscussionItemAvatar\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionItemContentUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionItemContent = styled(React.forwardRef<HTMLDivElement, DiscussionItemContentUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-item-content\"}\n    ref={ref}\n    data-testid=\"discussion-item-content\"\n    {...rest}\n  />\n)))`\n& {\n  margin-left: -16px;\n  position: relative;\n  color: #c9d1d9;\n  background: #0d1117;\n  border: 1px solid #30363d;\n  border-radius: 6px;\n  width: 100%;\n}\n&:before, &:after {\n  position: absolute;\n  top: 11px;\n  right: 100%;\n  left: -8px;\n  width: 8px;\n  height: 16px;\n  pointer-events: none;\n  content: \" \";\n  clip-path: polygon(0 50%, 100% 0, 100% 100%);\n  color: #c9d1d9;\n}\n&:before {\n  background-color: #30363d;\n}\n&:after {\n  margin-left: 1px;\n  background-color: #0d1117;\n  background-image: linear-gradient(#161b22, #161b22);\n}\n`\n\nexport default DiscussionItemContent\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionItemContentHeaderUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionItemContentHeader = styled(React.forwardRef<HTMLDivElement, DiscussionItemContentHeaderUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-item-content-header\"}\n    ref={ref}\n    data-testid=\"discussion-item-content-header\"\n    {...rest}\n  />\n)))`\n& {\n  display: flex;\n  padding-left: 16px;\n  padding-right: 16px;\n  align-items: center;\n  color: #8b949e;\n  background: #161b22;\n  border-bottom: 1px solid #30363d;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n`\n\nexport default DiscussionItemContentHeader\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionTimelineItemUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionTimelineItem = styled(React.forwardRef<HTMLDivElement, DiscussionTimelineItemUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-timeline-item\"}\n    ref={ref}\n    data-testid=\"discussion-timeline-item\"\n    {...rest}\n  />\n)))`\n& {\n  position: relative;\n  display: flex;\n  padding: 16px 0;\n  margin-left: 16px;\n  color: #8b949e;\n}\n&:before {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n  width: 2px;\n  content: \"\";\n  background-color: #21262d;\n}\n`\n\nexport default DiscussionTimelineItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionTimelineItemBadgeUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionTimelineItemBadge = styled(React.forwardRef<HTMLDivElement, DiscussionTimelineItemBadgeUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-timeline-item-badge\"}\n    ref={ref}\n    data-testid=\"discussion-timeline-item-badge\"\n    {...rest}\n  />\n)))`\n& {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  margin-left: -15px;\n  align-items: center;\n  background-color: #21262d;\n  border: 2px solid #0d1117;\n  border-radius: 50%;\n  justify-content: center;\n  flex-shrink: 0;\n}\n& > svg {\n  font-size: 16px;\n}\n`\n\nexport default DiscussionTimelineItemBadge\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionTimelineItemBodyUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionTimelineItemBody = styled(React.forwardRef<HTMLDivElement, DiscussionTimelineItemBodyUIProps>(({ className, ...rest }, ref) => (\n  <div\n    className={className + \" discussion-timeline-item-body\"}\n    ref={ref}\n    data-testid=\"discussion-timeline-item-body\"\n    {...rest}\n  />\n)))`\n& {\n  min-width: 0;\n  max-width: 100%;\n  margin-top: 4px;\n  flex: auto;\n}\n`\n\nexport default DiscussionTimelineItemBody\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordion from '@mui/material/Accordion';\nimport { AccordionProps } from '@mui/material/Accordion';\n\ninterface AdditionalInformationUIProps extends AccordionProps {}\nconst AdditionalInformation = styled(React.forwardRef<HTMLDivElement, AdditionalInformationUIProps>(({ className, ...rest }, ref) => (\n  <MuiAccordion\n    disableGutters\n    elevation={0}\n    square\n    className={className + \" additional-information\"}\n    ref={ref}\n    data-testid=\"additional-information\"\n    {...rest}\n  />\n)))(({ theme }) => ({\n  borderTop: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nexport default AdditionalInformation\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport { AccordionSummaryProps } from '@mui/material/AccordionSummary';\nimport CheckIcon from '@mui/icons-material/Check';\n\ninterface AdditionalInformationSummaryUIProps {}\nconst AdditionalInformationSummary = styled(React.forwardRef<HTMLDivElement, AccordionSummaryProps<'div', AdditionalInformationSummaryUIProps>>(({className, ...rest}, ref) => (\n  <MuiAccordionSummary\n    expandIcon={<CheckIcon />}\n    className={className + \" additional-information-summary\"}\n    ref={ref}\n    data-testid=\"additional-information-summary\"\n    {...rest}\n  />\n)))(({ theme }) => ({\n  backgroundColor: '#161b22',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(0deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    margin: 0,\n    marginLeft: theme.spacing(1),\n  },\n  fontSize: 13,\n  minHeight: 40,\n  '& svg': {\n    fontSize: 16,\n    color: '#3fb950'\n  }\n}));\n\nexport default AdditionalInformationSummary\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { AccordionDetailsProps } from '@mui/material/AccordionDetails';\n\ninterface AdditionalInformationDetailsUIProp extends AccordionDetailsProps {}\nconst AdditionalInformationDetails = styled(React.forwardRef<HTMLDivElement, AdditionalInformationDetailsUIProp>(({className, ...rest}, ref) => (\n  <MuiAccordionDetails\n    className={className + \" additional-information-details\"}\n    ref={ref}\n    data-testid=\"additional-information-details\"\n    {...rest}\n  />\n)))(({ theme }) => ({\n  padding: 0,\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n  '& .MuiList-root': {\n    padding: 0,\n    maxHeight: 390,\n    overflowY: 'auto',\n    '& .MuiListItem-root': {\n      borderTop: `1px solid ${theme.palette.divider}`,\n      '& .MuiListItemText-root': {\n        whiteSpace: 'break-spaces'\n      }\n    }\n  }\n}));\n\nexport default AdditionalInformationDetails\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport MuiList from '@mui/material/List';\nimport MuiListItem from '@mui/material/ListItem';\nimport MuiListItemText from '@mui/material/ListItemText';\nimport Discussion from './ui/discussion/Discussion'\nimport DiscussionContent from './ui/discussion/DiscussionContent'\nimport DiscussionSidebar from './ui/discussion/DiscussionSidebar'\nimport DiscussionSidebarItem from './ui/discussion/DiscussionSidebarItem'\nimport DiscussionItem from './ui/discussion/DiscussionItem'\nimport DiscussionItemAvatar from './ui/discussion/DiscussionItemAvatar'\nimport DiscussionItemContent from './ui/discussion/DiscussionItemContent'\nimport DiscussionItemContentHeader from './ui/discussion/DiscussionItemContentHeader'\nimport DiscussionTimelineItem from './ui/discussion/DiscussionTimelineItem'\nimport DiscussionTimelineItemBadge from './ui/discussion/DiscussionTimelineItemBadge'\nimport DiscussionTimelineItemBody from './ui/discussion/DiscussionTimelineItemBody'\nimport AdditionalInformation from './ui/discussion/AdditionalInformation'\nimport AdditionalInformationSummary from './ui/discussion/AdditionalInformationSummary'\nimport AdditionalInformationDetails from './ui/discussion/AdditionalInformationDetails'\nimport Avatar from './Avatar'\n\ntype DiscussionTimelineItemType = {\n  icon: typeof SvgIcon,\n  text: string\n}\ntype DiscussionSidebarItemType = [ string, string | React.ReactElement ];\ntype DiscussionAdditionalItemType = {\n  title: string,\n  items: string[]\n}\ninterface DiscussionComponentProps {\n  username: string,\n  title: string,\n  content: string | string[],\n  timelineItems: Array<DiscussionTimelineItemType>,\n  sidebarItems: Array<DiscussionSidebarItemType>,\n  additionalItems: Array<DiscussionAdditionalItemType>\n}\nconst DiscussionComponent: React.FC<DiscussionComponentProps> = (props) => {\n  const [expanded, setExpanded] = React.useState<string | boolean>('');\n\n  const handleChange = React.useCallback((panel: string) => (_: React.SyntheticEvent, newExpanded: boolean) => {\n    setExpanded(newExpanded ? panel : false);\n  }, []);\n  const {\n    username,\n    title,\n    content,\n    timelineItems = [],\n    sidebarItems = [],\n    additionalItems = []\n  } = props;\n\n  return (\n    <>\n      <Discussion>\n        <DiscussionContent>\n          {timelineItems\n            .map((timelineItem, index) => (\n              <DiscussionTimelineItem\n                key={index}\n                data-testid={\"discussion-timeline-item-\" + index}\n              >\n                <DiscussionTimelineItemBadge>\n                  <SvgIcon component={timelineItem.icon} />\n                </DiscussionTimelineItemBadge>\n                <DiscussionTimelineItemBody>\n                  <Box display=\"inline-block\">\n                    <Avatar\n                      height={20}\n                      width={20}\n                      sx={{\n                        verticalAlign: 'middle',\n                        display: 'inline-block'\n                      }}\n                    />\n                  </Box> <Typography\n                    component=\"span\"\n                    className=\"discussion-username\"\n                  >\n                    {username}\n                  </Typography> <Typography\n                    component=\"span\"\n                  >\n                    {timelineItem.text}\n                  </Typography>\n                </DiscussionTimelineItemBody>\n              </DiscussionTimelineItem>\n            ))}\n          <DiscussionItem>\n            <DiscussionItemAvatar>\n              <Avatar\n                height={40}\n                width={40}\n              />\n            </DiscussionItemAvatar>\n            <DiscussionItemContent>\n              <DiscussionItemContentHeader>\n                <Typography\n                  component=\"h3\"\n                  pt={1}\n                  pb={1}\n                  flex=\"auto\"\n                >\n                  <span className=\"discussion-username\">{username}</span> {title}\n                </Typography>\n              </DiscussionItemContentHeader>\n              <Box\n                className=\"discussion-item-content-body\"\n              >\n                <Box\n                  p={2}\n                  sx={{\n                    wordBreak: 'break-word'\n                  }}\n                  data-testid=\"discussion-item-content-body-content\"\n                >\n                  {typeof content === 'string' ? content: content.join(\"\\n\")}\n                </Box>\n                <Box\n                  sx={{\n                    borderBottomLeftRadius: '6px',\n                    borderBottomRightRadius: '6px',\n                    overflow: 'hidden'\n                  }}\n                  data-testid=\"discussion-item-content-body-items\"\n                >\n                  {additionalItems.map((additionalItem, index) => (\n                    <AdditionalInformation\n                      expanded={expanded === ('panel' + index)}\n                      onChange={handleChange('panel' + index)}\n                      key={index}\n                      data-testid={\"additional-information-\" + index}\n                    >\n                      <AdditionalInformationSummary\n                        data-testid={\"additional-information-summary-\" + index}\n                      >\n                        <span style={{flex: 'auto'}}>{additionalItem.title}</span>\n                        <span>Details</span>\n                      </AdditionalInformationSummary>\n                      <AdditionalInformationDetails\n                        data-testid={\"additional-information-details-\" + index}\n                      >\n                        <MuiList>\n                          {additionalItem.items.length === 0 ?\n                            <MuiListItem>\n                              <MuiListItemText primary=\"Nothing to show...\" />\n                            </MuiListItem>\n                          : null}\n                          {additionalItem.items.map((item, index) => (\n                            <MuiListItem key={index}>\n                              <MuiListItemText primary={item} />\n                            </MuiListItem>\n                          ))}\n                        </MuiList>\n                      </AdditionalInformationDetails>\n                    </AdditionalInformation>\n                  ))}\n                </Box>\n              </Box>\n            </DiscussionItemContent>\n          </DiscussionItem>\n        </DiscussionContent>\n        <DiscussionSidebar>\n          {sidebarItems.map(([ title, text ], index) => (\n            <DiscussionSidebarItem\n              key={index}\n              data-testid={\"discussion-sidebar-item-\" + index}\n            >\n              <Box\n                className=\"discussion-sidebar-item-header\"\n              >\n                {title}\n              </Box>\n              <Box\n                className=\"discussion-sidebar-item-body\"\n              >\n                {text}\n              </Box>\n            </DiscussionSidebarItem>\n          ))}\n        </DiscussionSidebar>\n      </Discussion>\n    </>\n  )\n}\n\nexport default DiscussionComponent;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport LoginIcon from '@mui/icons-material/Login';\nimport moment from 'moment';\nimport Discussion from '../../components/Discussion';\nimport LinkGoogleMap from '../../components/LinkGoogleMap';\nimport GithubLink from '../../components/ui/GithubLink';\nimport { PersonalDataContext } from '../../contexts/personalData'\n\nconst Experience: React.FC = () => {\n  const { experiences, profile } = React.useContext(PersonalDataContext);\n\n  const RenderDom = React.useMemo(() => {\n    return experiences.map((experience, index) => {\n      return <Discussion\n        key={index}\n        username={profile.name.en.lastName.toLowerCase()}\n        title={`joined ${experience.companyName} ` + moment(experience.employedAt).fromNow()}\n        content={experience.summary}\n        timelineItems={[\n          {\n            icon: LogoutIcon,\n            text: `left ${experience.companyName} ` + moment(experience.leftAt).fromNow()\n          },\n          {\n            icon: LoginIcon,\n            text: `joined ${experience.companyName} ` + moment(experience.employedAt).fromNow()\n          }\n        ]}\n        sidebarItems={[\n          [\n            'Company Name',\n            experience.companyName\n          ],\n          [\n            'Employment type',\n            experience.employmentType\n          ],\n          [\n            'joined and left date',\n            moment(experience.employedAt).format('MMM YYYY') + ' - ' + moment(experience.leftAt).format('MMM YYYY')\n          ],\n          [\n            'Location',\n            <LinkGoogleMap>{experience.location}</LinkGoogleMap>,\n          ],\n          [\n            'Homepage',\n            <GithubLink href={experience.homepage}>{experience.homepage}</GithubLink>\n          ]\n        ]}\n        additionalItems={[\n          {\n            title: 'Responsibility for:',\n            items: experience.responsibilities\n          },\n          {\n            title: 'Achievements:',\n            items: experience.achievements\n          },\n          {\n            title: 'Used technologies:',\n            items: experience.usedSkills\n          }\n        ]}\n      />\n    })\n  }, [\n    experiences,\n    profile\n  ]);\n\n  return <Box\n    mt={2}\n    data-testid=\"page-experience\"\n  >\n    {RenderDom}\n  </Box>\n}\n\nexport default Experience;\n"],"names":["styled","React","_ref","ref","className","rest","_objectWithoutProperties","_excluded","_jsx","_objectSpread","_ref2","_discussionContent","_discussionSidebar","_","theme","_defineProperty","breakpoints","up","_templateObject","_taggedTemplateLiteral","MuiAccordion","disableGutters","elevation","square","borderTop","concat","palette","divider","borderBottom","display","MuiAccordionSummary","expandIcon","CheckIcon","backgroundColor","flexDirection","transform","margin","marginLeft","spacing","fontSize","minHeight","color","MuiAccordionDetails","padding","maxHeight","overflowY","whiteSpace","props","_React$useState","_React$useState2","_slicedToArray","expanded","setExpanded","handleChange","panel","newExpanded","username","title","content","_props$timelineItems","timelineItems","_props$sidebarItems","sidebarItems","_props$additionalItem","additionalItems","_Fragment","children","_jsxs","Discussion","DiscussionContent","map","timelineItem","index","DiscussionTimelineItem","DiscussionTimelineItemBadge","SvgIcon","component","icon","DiscussionTimelineItemBody","Box","Avatar","height","width","sx","verticalAlign","Typography","text","DiscussionItem","DiscussionItemAvatar","DiscussionItemContent","DiscussionItemContentHeader","pt","pb","flex","p","wordBreak","join","borderBottomLeftRadius","borderBottomRightRadius","overflow","additionalItem","AdditionalInformation","onChange","AdditionalInformationSummary","style","AdditionalInformationDetails","MuiList","items","length","MuiListItem","MuiListItemText","primary","item","DiscussionSidebar","DiscussionSidebarItem","_React$useContext","PersonalDataContext","experiences","profile","RenderDom","experience","name","en","lastName","toLowerCase","companyName","moment","employedAt","fromNow","summary","LogoutIcon","leftAt","LoginIcon","employmentType","format","LinkGoogleMap","location","GithubLink","href","homepage","responsibilities","achievements","usedSkills","mt"],"sourceRoot":""}