{"version":3,"file":"static/js/649.59c459ba.chunk.js","mappings":"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","sources":["components/ui/discussion/Discussion.tsx","components/ui/discussion/DiscussionContent.tsx","components/ui/discussion/DiscussionSidebar.tsx","components/ui/discussion/DiscussionSidebarItem.tsx","components/ui/discussion/DiscussionItem.tsx","components/ui/discussion/DiscussionItemAvatar.tsx","components/ui/discussion/DiscussionItemContent.tsx","components/ui/discussion/DiscussionItemContentHeader.tsx","components/ui/discussion/DiscussionTimelineItem.tsx","components/ui/discussion/DiscussionTimelineItemBadge.tsx","components/ui/discussion/DiscussionTimelineItemBody.tsx","components/ui/discussion/AdditionalInformation.tsx","components/ui/discussion/AdditionalInformationSummary.tsx","components/ui/discussion/AdditionalInformationDetails.tsx","components/Discussion.tsx","pages/home/experience.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst Discussion = styled(React.forwardRef<HTMLDivElement, DiscussionUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion\"} ref={ref} {...rest} />\n)))`\n& {\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: row;\n  gap: 24px;\n  align-items: end;\n}\n& .discussion-username {\n  font-weight: 900;\n  color: #c9d1d9;\n}\n`\n\nexport default Discussion\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionContentUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionContent = styled(React.forwardRef<HTMLDivElement, DiscussionContentUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-content\"} ref={ref} {...rest} />\n)))`\n& {\n  flex-basis: 75%;\n  flex-grow: 0;\n  max-width: 75%;\n  margin: 0 0 0 40px;\n  padding-left: 16px;\n  border-bottom: 2px solid #30363d;\n}\n`\n\nexport default DiscussionContent\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionSidebarUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionSidebar = styled(React.forwardRef<HTMLDivElement, DiscussionSidebarUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-sidebar\"} ref={ref} {...rest} />\n)))`\n& {\n  flex-basis: 25%;\n  flex-grow: 0;\n  max-width: 25%;\n  margin: 0;\n}\n`\n\nexport default DiscussionSidebar\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionSidebarItemUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionSidebarItem = styled(React.forwardRef<HTMLDivElement, DiscussionSidebarItemUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-sidebar-item\"} {...rest} />\n)))`\n& {\n  padding-top: 16px;\n  font-size: 12px;\n  color: #8b949e;\n}\n&+& {\n  margin-top: 16px;\n  border-top: 1px solid #21262d;\n}\n& .discussion-sidebar-item-header {\n  font-weight: 900;\n  margin-bottom: 8px;\n  color: #c9d1d9;\n}\n`\n\nexport default DiscussionSidebarItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionItemUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionItem = styled(React.forwardRef<HTMLDivElement, DiscussionItemUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-item\"} ref={ref} {...rest} />\n)))`\n& {\n  position: relative;\n  display: flex;\n  padding-bottom: 16px;\n  margin-left: 16px;\n  width: 100%;\n}\n&:before {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 2px;\n  content: \"\";\n  background-color: #21262d;\n}\n`\n\nexport default DiscussionItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionItemAvatarUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionItemAvatar = styled(React.forwardRef<HTMLDivElement, DiscussionItemAvatarUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-item-avatar\"} ref={ref} {...rest} />\n)))`\n& {\n  position: absolute;\n  left: -72px;\n}\n`\n\nexport default DiscussionItemAvatar\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionItemContentUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionItemContent = styled(React.forwardRef<HTMLDivElement, DiscussionItemContentUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-item-content\"} ref={ref} {...rest} />\n)))`\n& {\n  margin-left: -16px;\n  position: relative;\n  color: #c9d1d9;\n  background: #0d1117;\n  border: 1px solid #30363d;\n  border-radius: 6px;\n  width: 100%;\n}\n&:before, &:after {\n  position: absolute;\n  top: 11px;\n  right: 100%;\n  left: -8px;\n  width: 8px;\n  height: 16px;\n  pointer-events: none;\n  content: \" \";\n  clip-path: polygon(0 50%, 100% 0, 100% 100%);\n  color: #c9d1d9;\n}\n&:before {\n  background-color: #30363d;\n}\n&:after {\n  margin-left: 1px;\n  background-color: #0d1117;\n  background-image: linear-gradient(#161b22, #161b22);\n}\n`\n\nexport default DiscussionItemContent\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionItemContentHeaderUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionItemContentHeader = styled(React.forwardRef<HTMLDivElement, DiscussionItemContentHeaderUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-item-content-header\"} ref={ref} {...rest} />\n)))`\n& {\n  display: flex;\n  padding-left: 16px;\n  padding-right: 16px;\n  align-items: center;\n  color: #8b949e;\n  background: #161b22;\n  border-bottom: 1px solid #30363d;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n`\n\nexport default DiscussionItemContentHeader\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionTimelineItemUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionTimelineItem = styled(React.forwardRef<HTMLDivElement, DiscussionTimelineItemUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-timeline-item\"} ref={ref} {...rest} />\n)))`\n& {\n  position: relative;\n  display: flex;\n  padding: 16px 0;\n  margin-left: 16px;\n  color: #8b949e;\n}\n&:before {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n  width: 2px;\n  content: \"\";\n  background-color: #21262d;\n}\n`\n\nexport default DiscussionTimelineItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionTimelineItemBadgeUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionTimelineItemBadge = styled(React.forwardRef<HTMLDivElement, DiscussionTimelineItemBadgeUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-timeline-item-badge\"} ref={ref} {...rest} />\n)))`\n& {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  margin-left: -15px;\n  align-items: center;\n  background-color: #21262d;\n  border: 2px solid #0d1117;\n  border-radius: 50%;\n  justify-content: center;\n  flex-shrink: 0;\n}\n& > svg {\n  font-size: 16px;\n}\n`\n\nexport default DiscussionTimelineItemBadge\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface DiscussionTimelineItemBodyUIProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string\n}\nconst DiscussionTimelineItemBody = styled(React.forwardRef<HTMLDivElement, DiscussionTimelineItemBodyUIProps>(({ className, ...rest }, ref) => (\n  <div className={className + \" discussion-timeline-item-body\"} ref={ref} {...rest} />\n)))`\n& {\n  min-width: 0;\n  max-width: 100%;\n  margin-top: 4px;\n  flex: auto;\n}\n`\n\nexport default DiscussionTimelineItemBody\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordion from '@mui/material/Accordion';\nimport { AccordionProps } from '@mui/material/Accordion';\n\ninterface AdditionalInformationUIProps extends AccordionProps {}\nconst AdditionalInformation = styled(React.forwardRef<HTMLDivElement, AdditionalInformationUIProps>(({ className, ...rest }, ref) => (\n  <MuiAccordion disableGutters elevation={0} square className={className + \" additional-information\"} ref={ref} {...rest} />\n)))(({ theme }) => ({\n  borderTop: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nexport default AdditionalInformation\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport { AccordionSummaryProps } from '@mui/material/AccordionSummary';\nimport CheckIcon from '@mui/icons-material/Check';\n\ninterface AdditionalInformationSummaryUIProps {}\nconst AdditionalInformationSummary = styled(React.forwardRef<HTMLDivElement, AccordionSummaryProps<'div', AdditionalInformationSummaryUIProps>>(({className, ...rest}, ref) => (\n  <MuiAccordionSummary\n    expandIcon={<CheckIcon />}\n    className={className + \" additional-information-summary\"}\n    ref={ref}\n    {...rest}\n  />\n)))(({ theme }) => ({\n  backgroundColor: '#161b22',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(0deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    margin: 0,\n    marginLeft: theme.spacing(1),\n  },\n  fontSize: 13,\n  minHeight: 40,\n  '& svg': {\n    fontSize: 16,\n    color: '#3fb950'\n  }\n}));\n\nexport default AdditionalInformationSummary\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { AccordionDetailsProps } from '@mui/material/AccordionDetails';\n\ninterface AdditionalInformationDetailsUIProp extends AccordionDetailsProps {}\nconst AdditionalInformationDetails = styled(React.forwardRef<HTMLDivElement, AdditionalInformationDetailsUIProp>(({className, ...rest}, ref) => (\n  <MuiAccordionDetails className={className + \" additional-information-details\"} ref={ref} {...rest} />\n)))(({ theme }) => ({\n  padding: 0,\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n  '& .MuiList-root': {\n    padding: 0,\n    maxHeight: 390,\n    overflowY: 'auto',\n    '& .MuiListItem-root': {\n      borderTop: `1px solid ${theme.palette.divider}`,\n      '& .MuiListItemText-root': {\n        whiteSpace: 'break-spaces'\n      }\n    }\n  }\n}));\n\nexport default AdditionalInformationDetails\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport MuiList from '@mui/material/List';\nimport MuiListItem from '@mui/material/ListItem';\nimport MuiListItemText from '@mui/material/ListItemText';\nimport Discussion from './ui/discussion/Discussion'\nimport DiscussionContent from './ui/discussion/DiscussionContent'\nimport DiscussionSidebar from './ui/discussion/DiscussionSidebar'\nimport DiscussionSidebarItem from './ui/discussion/DiscussionSidebarItem'\nimport DiscussionItem from './ui/discussion/DiscussionItem'\nimport DiscussionItemAvatar from './ui/discussion/DiscussionItemAvatar'\nimport DiscussionItemContent from './ui/discussion/DiscussionItemContent'\nimport DiscussionItemContentHeader from './ui/discussion/DiscussionItemContentHeader'\nimport DiscussionTimelineItem from './ui/discussion/DiscussionTimelineItem'\nimport DiscussionTimelineItemBadge from './ui/discussion/DiscussionTimelineItemBadge'\nimport DiscussionTimelineItemBody from './ui/discussion/DiscussionTimelineItemBody'\nimport AdditionalInformation from './ui/discussion/AdditionalInformation'\nimport AdditionalInformationSummary from './ui/discussion/AdditionalInformationSummary'\nimport AdditionalInformationDetails from './ui/discussion/AdditionalInformationDetails'\nimport Avatar from './Avatar'\n\ntype DiscussionTimelineItemType = {\n  icon: typeof SvgIcon,\n  text: string\n}\ntype DiscussionSidebarItemType = [ string, string | React.ReactElement ];\ntype DiscussionAdditionalItemType = {\n  title: string,\n  items: string[]\n}\ninterface DiscussionComponentProps {\n  username: string,\n  title: string,\n  content: string | string[],\n  timelineItems: Array<DiscussionTimelineItemType>,\n  sidebarItems: Array<DiscussionSidebarItemType>,\n  additionalItems: Array<DiscussionAdditionalItemType>\n}\nconst DiscussionComponent: React.FC<DiscussionComponentProps> = (props) => {\n  const [expanded, setExpanded] = React.useState<string | boolean>('');\n\n  const handleChange = React.useCallback((panel: string) => (_: React.SyntheticEvent, newExpanded: boolean) => {\n    setExpanded(newExpanded ? panel : false);\n  }, []);\n  const {\n    username,\n    title,\n    content,\n    timelineItems = [],\n    sidebarItems = [],\n    additionalItems = []\n  } = props;\n\n  return (\n    <>\n      <Discussion>\n        <DiscussionContent>\n          {timelineItems\n            .map((timelineItem, index) => (\n              <DiscussionTimelineItem key={index}>\n                <DiscussionTimelineItemBadge>\n                  <SvgIcon component={timelineItem.icon} />\n                </DiscussionTimelineItemBadge>\n                <DiscussionTimelineItemBody>\n                  <Box display=\"inline-block\">\n                    <Avatar\n                      height={20}\n                      width={20}\n                      sx={{\n                        verticalAlign: 'middle',\n                        display: 'inline-block'\n                      }}\n                    />\n                  </Box> <Typography\n                    component=\"span\"\n                    className=\"discussion-username\"\n                  >\n                    {username}\n                  </Typography> <Typography\n                    component=\"span\"\n                  >\n                    {timelineItem.text}\n                  </Typography>\n                </DiscussionTimelineItemBody>\n              </DiscussionTimelineItem>\n            ))}\n          <DiscussionItem>\n            <DiscussionItemAvatar>\n              <Avatar\n                height={40}\n                width={40}\n              />\n            </DiscussionItemAvatar>\n            <DiscussionItemContent>\n              <DiscussionItemContentHeader>\n                <Typography\n                  component=\"h3\"\n                  pt={1}\n                  pb={1}\n                  flex=\"auto\"\n                >\n                  <span className=\"discussion-username\">{username}</span> {title}\n                </Typography>\n              </DiscussionItemContentHeader>\n              <Box\n                className=\"discussion-item-content-body\"\n              >\n                <Box\n                  p={2}\n                  sx={{\n                    wordBreak: 'break-word'\n                  }}\n                >\n                  {typeof content === 'string' ? content: content.join(\"\\n\")}\n                </Box>\n                <Box\n                  sx={{\n                    borderBottomLeftRadius: '6px',\n                    borderBottomRightRadius: '6px',\n                    overflow: 'hidden'\n                  }}\n                >\n                  {additionalItems.map((additionalItem, index) => (\n                    <AdditionalInformation\n                      expanded={expanded === ('panel' + index)}\n                      onChange={handleChange('panel' + index)}\n                      key={index}\n                    >\n                      <AdditionalInformationSummary>\n                        <span style={{flex: 'auto'}}>{additionalItem.title}</span>\n                        <span>Details</span>\n                      </AdditionalInformationSummary>\n                      <AdditionalInformationDetails>\n                        <MuiList>\n                          {additionalItem.items.length === 0 ?\n                            <MuiListItem>\n                              <MuiListItemText primary=\"Nothing to show...\" />\n                            </MuiListItem>\n                          : null}\n                          {additionalItem.items.map((item, index) => (\n                            <MuiListItem key={index}>\n                              <MuiListItemText primary={item} />\n                            </MuiListItem>\n                          ))}\n                        </MuiList>\n                      </AdditionalInformationDetails>\n                    </AdditionalInformation>\n                  ))}\n                </Box>\n              </Box>\n            </DiscussionItemContent>\n          </DiscussionItem>\n        </DiscussionContent>\n        <DiscussionSidebar>\n          {sidebarItems.map(([ title, text ], index) => (\n            <DiscussionSidebarItem key={index}>\n              <Box\n                className=\"discussion-sidebar-item-header\"\n              >\n                {title}\n              </Box>\n              <Box\n                className=\"discussion-sidebar-item-body\"\n              >\n                {text}\n              </Box>\n            </DiscussionSidebarItem>\n          ))}\n        </DiscussionSidebar>\n      </Discussion>\n    </>\n  )\n}\n\nexport default DiscussionComponent;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport LoginIcon from '@mui/icons-material/Login';\nimport moment from 'moment';\nimport Discussion from '../../components/Discussion';\nimport LinkGoogleMap from '../../components/LinkGoogleMap';\nimport GithubLink from '../../components/ui/GithubLink';\nimport { PersonalDataContext } from '../../contexts/personalData'\n\nconst Experience: React.FC = () => {\n  const { experiences, profile } = React.useContext(PersonalDataContext);\n\n  const RenderDom = React.useMemo(() => {\n    return experiences.map((experience, index) => {\n      return <Discussion\n        key={index}\n        username={profile.name.en.lastName.toLowerCase()}\n        title={`joined ${experience.companyName} ` + moment(experience.employedAt).fromNow()}\n        content={experience.summary}\n        timelineItems={[\n          {\n            icon: LogoutIcon,\n            text: `left ${experience.companyName} ` + moment(experience.leftAt).fromNow()\n          },\n          {\n            icon: LoginIcon,\n            text: `joined ${experience.companyName} ` + moment(experience.employedAt).fromNow()\n          }\n        ]}\n        sidebarItems={[\n          [\n            'Company Name',\n            experience.companyName\n          ],\n          [\n            'Employment type',\n            experience.employmentType\n          ],\n          [\n            'joined and left date',\n            moment(experience.employedAt).format('MMM YYYY') + ' - ' + moment(experience.leftAt).format('MMM YYYY')\n          ],\n          [\n            'Location',\n            <LinkGoogleMap>{experience.location}</LinkGoogleMap>,\n          ],\n          [\n            'Homepage',\n            <GithubLink href={experience.homepage}>{experience.homepage}</GithubLink>\n          ]\n        ]}\n        additionalItems={[\n          {\n            title: 'Responsibility for:',\n            items: experience.responsibilities\n          },\n          {\n            title: 'Achievements:',\n            items: experience.achievements\n          },\n          {\n            title: 'Used technologies:',\n            items: experience.usedSkills\n          }\n        ]}\n      />\n    })\n  }, [\n    experiences,\n    profile\n  ]);\n\n  return <Box mt={2}>{RenderDom}</Box>\n}\n\nexport default Experience;\n"],"names":["styled","React","ref","className","rest","disableGutters","elevation","square","theme","borderTop","palette","divider","borderBottom","display","expandIcon","Check","backgroundColor","flexDirection","transform","margin","marginLeft","spacing","fontSize","minHeight","color","padding","maxHeight","overflowY","whiteSpace","props","expanded","setExpanded","handleChange","panel","_","newExpanded","username","title","content","timelineItems","sidebarItems","additionalItems","map","timelineItem","index","SvgIcon","component","icon","Box","Avatar","height","width","sx","verticalAlign","Typography","text","pt","pb","flex","p","wordBreak","join","borderBottomLeftRadius","borderBottomRightRadius","overflow","additionalItem","onChange","style","items","length","primary","item","PersonalDataContext","experiences","profile","RenderDom","experience","name","en","lastName","toLowerCase","companyName","moment","employedAt","fromNow","summary","LogoutIcon","leftAt","LoginIcon","employmentType","format","LinkGoogleMap","location","GithubLink","href","homepage","responsibilities","achievements","usedSkills","mt"],"sourceRoot":""}