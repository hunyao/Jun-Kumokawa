{"version":3,"file":"static/js/959.48f00306.chunk.js","mappings":"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","sources":["data/Skills.tsx","components/ui/GithubChip.tsx","components/ResourceLink.tsx","components/sidebar/SidebarItem.tsx","components/sidebar/About.tsx","components/sidebar/GithubProgress.tsx","components/Sidebar.tsx","pages/home/overview.tsx"],"sourcesContent":["import {\n  amber,\n  blue,\n  blueGrey,\n  brown,\n  cyan,\n  deepOrange,\n  deepPurple,\n  green,\n  grey,\n  indigo,\n  lightBlue,\n  lightGreen,\n  lime,\n  orange,\n  pink,\n  purple,\n  red,\n  teal,\n  yellow\n} from '@mui/material/colors';\nimport kebabcase from 'lodash.kebabcase';\n\nconst getColorCode = (colorObj: any, index: number) => {\n  const key: string = Object\n  .keys(colorObj)\n  .reverse()\n  .find((key, i) => i === index) as string;\n  return colorObj[key];\n}\n\nexport const skills = [\n  ...[\n    [ \"JavaScript\", 10 ],\n    [ \"HTML\", 10 ],\n    [ \"CSS\", 10 ],\n    [ \"Node.js\", 10 ],\n    [ \"TypeScript\", 10 ],\n    [ \"PHP\", 10 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Coding Languages\",\n    label,\n    value,\n    color: getColorCode(amber, index)\n  })),\n  ...[\n    [ \"Bash\", 10 ],\n    [ \"sh\", 10 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Shell Languages\",\n    label,\n    value,\n    color: getColorCode(blue, index)\n  })),\n  ...[\n    [ \"Japanese\", 30 ],\n    [ \"English\", 10 ],\n    [ \"Estonian\", 1 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Human Languages\",\n    label,\n    value,\n    color: getColorCode(pink, index)\n  })),\n  ...[\n    [ \"Windows\", 30 ],\n    [ \"Ubuntu\", 10 ],\n    [ \"MacOS\", 1 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Oparationg systems\",\n    label,\n    value,\n    color: getColorCode(orange, index)\n  })),\n  ...[\n    [ \"AWS\", 30 ],\n    [ \"Azure\", 10 ],\n    [ \"GCP\", 1 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Cloud platforms\",\n    label,\n    value,\n    color: getColorCode(cyan, index)\n  })),\n  ...[\n    [ \"React.js\", 5 ],\n    [ \"Vue.js\", 5 ],\n    [ \"Express\", 4 ],\n    [ \"CakePHP\", 3 ],\n    [ \"Zend Framework\", 2 ],\n    [ \"AngularJS\", 1 ],\n    [ \"FuelPHP\", 1 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Frameworks\",\n    label,\n    value,\n    color: getColorCode(deepOrange, index)\n  })),\n  ...[\n    [ \"MUI\", 30 ],\n    [ \"Vuetify\", 10 ],\n    [ \"Bootstrap\", 1 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"UI libraries\",\n    label,\n    value,\n    color: getColorCode(deepPurple, index)\n  })),\n  ...[\n    [ \"jQuery\", 5 ],\n    [ \"Vuex\", 3 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Libraries\",\n    label,\n    value,\n    color: getColorCode(green, index)\n  })),\n  ...[\n    [ \"MySQL\", 30 ],\n    [ \"PostgreSQL\", 30 ],\n    [ \"SQLServer\", 30 ],\n    [ \"Memcached\", 30 ],\n    [ \"Redis\", 30 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Databases\",\n    label,\n    value,\n    color: getColorCode(lime, index)\n  })),\n  ...[\n    [ \"Git\", 8 ],\n    [ \"npm\", 5 ],\n    [ \"yarn\", 5 ],\n    [ \"Docker\", 5 ],\n    [ \"Subversion\", 1 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Tools\",\n    label,\n    value,\n    color: getColorCode(indigo, index)\n  })),\n  ...[\n    [ \"Vim\", 5 ],\n    [ \"Aptana Studio\", 2 ],\n    [ \"Eclipse\", 1 ],\n    [ \"Atom\", 1 ],\n    [ \"VSCode\", 0 ],\n    [ \"IntelliJ IDEA\", 0 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Editors\",\n    label,\n    value,\n    color: getColorCode(lightBlue, index)\n  })),\n  ...[\n    [ \"Apache\", 10 ],\n    [ \"Postfix\", 10 ],\n    [ \"BIND9\", 10 ],\n    [ \"Nginx\", 1 ],\n  ].map(([ label, value ], index: number) => ({\n    groupName: \"Middlewares\",\n    label,\n    value,\n    color: getColorCode(lightGreen, index)\n  })),\n].map(skill => {\n  return {\n    groupId: kebabcase(skill.groupName),\n    ...skill\n  }\n})\n\nexport const groupedSkills = Object.fromEntries(\n  skills.map(skill => {\n    return skill.groupName\n  })\n  .filter((groupName, index, self) => {\n    return self.indexOf(groupName) === index;\n  })\n  .map(groupName => {\n    return [\n      groupName,\n      skills.filter(item => item.groupName === groupName)\n    ]\n  })\n)\nexport const groupList = skills.map(skill => {\n  return skill.groupName\n})\n.filter((groupName, index, self) => {\n  return self.indexOf(groupName) === index;\n})\n.map(groupName => {\n  return [\n    groupName,\n    kebabcase(groupName)\n  ]\n});\n","import { styled } from '@mui/material/styles';\n\nconst GithubChip = styled(\"a\")`\n& {\n  display: inline-block;\n  padding: 0 7px;\n  font-size: 12px;\n  font-weight: 500;\n  border-radius: 2em;\n  padding-right: 10px;\n  padding-left: 10px;\n  line-height: 22px;\n  color: #58a6ff;\n  background-color: rgba(56,139,253,0.15);\n  border: 1px solid rgba(0, 0, 0, 0);\n  white-space: nowrap;\n  margin: 0 .125em .333em 0;\n  text-decoration: none;\n  cursor: pointer;\n  user-select: none;\n}\n&:hover {\n  background-color: #1f6feb;\n  color: #f0f6fc;\n  text-decoration: none;\n}\n&:active {\n  background-color: #1f6feb;\n  color: #f0f6fc;\n}\n`\n\nexport default GithubChip;\n","import Box from '@mui/material/Box';\nimport GithubLink from './ui/GithubLink'\nimport SvgIcon from '@mui/material/SvgIcon';\n\nconst ResouceLink = (props: any) => {\n  const {\n    icon,\n    text\n  } = props;\n\n  return (\n    <>\n      <Box mt={1}>\n        <GithubLink\n          href=\"#\"\n          className=\"no-underline\"\n        >\n          <SvgIcon\n            component={icon}\n            sx={{\n              height: 16,\n              width: 16,\n              marginRight: 1\n            }}\n          />\n          {text}\n        </GithubLink>\n      </Box>\n    </>\n  )\n}\n\nexport default ResouceLink;\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst SidebarItem = (props: any) => {\n  const {\n    title,\n    children\n  } = props;\n\n  return (\n    <>\n      <Box\n        sx={{\n          borderBottom: '1px solid #21262d'\n        }}\n        py={3}\n      >\n        <Typography\n          component=\"h2\"\n          sx={{\n            fontWeight: 900,\n            marginBottom: 2,\n          }}\n        >\n          {title}\n        </Typography>\n        {children}\n      </Box>\n    </>\n  )\n}\n\nexport default SidebarItem;\n","import Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport LinkIcon from '@mui/icons-material/Link';\nimport GithubLink from '../ui/GithubLink'\nimport GithubChip from '../ui/GithubChip'\nimport ResouceLink from '../ResourceLink'\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport CopyrightIcon from '@mui/icons-material/Copyright';\nimport StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\nimport RemoveRedEyeOutlinedIcon from '@mui/icons-material/RemoveRedEyeOutlined';\nimport ThumbUpAltOutlinedIcon from '@mui/icons-material/ThumbUpAltOutlined';\nimport ThumbDownAltOutlinedIcon from '@mui/icons-material/ThumbDownAltOutlined';\nimport SidebarItem from './SidebarItem'\n\nconst About = () => {\n  return (\n    <>\n      <SidebarItem title=\"About\">\n        <Typography\n          paragraph\n        >\n          An efficient and flexible Human library for making web systems.\n        </Typography>\n        <Grid\n          container\n          alignItems=\"center\"\n          my={2}\n          spacing={0.5}\n        >\n          <Grid\n            item\n            component={LinkIcon}\n          />\n          <Grid item>\n            <GithubLink\n              href=\"#\"\n              className=\"active\"\n            >\n              https://kumoti.jp\n            </GithubLink>\n          </Grid>\n        </Grid>\n        <Box\n          my={2}\n        >\n          <GithubChip>react</GithubChip>\n          <GithubChip>japascript</GithubChip>\n          <GithubChip>library</GithubChip>\n          <GithubChip>ui</GithubChip>\n          <GithubChip>full-stack</GithubChip>\n          <GithubChip>front-end</GithubChip>\n          <GithubChip>back-end</GithubChip>\n        </Box>\n        <Box>\n          <ResouceLink\n            icon={MenuBookIcon}\n            text=\"Readme\"\n          />\n          <ResouceLink\n            icon={CopyrightIcon}\n            text=\"MIT License\"\n          />\n          <ResouceLink\n            icon={StarBorderOutlinedIcon}\n            text=\"181k stars\"\n          />\n          <ResouceLink\n            icon={RemoveRedEyeOutlinedIcon}\n            text=\"6.7k watching\"\n          />\n          <ResouceLink\n            icon={ThumbUpAltOutlinedIcon}\n            text=\"123m like\"\n          />\n          <ResouceLink\n            icon={ThumbDownAltOutlinedIcon}\n            text=\"10k dislike\"\n          />\n        </Box>\n      </SidebarItem>\n    </>\n  )\n}\n\nexport default About;\n","import Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport Tooltip from '@mui/material/Tooltip';\nimport Fade from '@mui/material/Fade';\n\nconst ProgressWrappr = styled(({ className, ...rest }: any) => (\n  <span className={className + \" github-progress-wrapper\"} {...rest} />\n))`\n& {\n  display: flex;\n  height: 8px;\n  overflow: hidden;\n  background-color: rgba(110,118,129,0.4);\n  border-radius: 6px;\n  outline: 1px solid transparent;\n}\n`\n\nconst GithubProgress = (props: any) => {\n  const {\n    list\n  } = props;\n\n  const TotalValues = list.reduce((prev: any, current: any) => prev + current.value, 0);\n\n  return (\n    <>\n      <Box className=\"github-progress\">\n        <ProgressWrappr>\n          {list.map((item: any, index: any) => {\n            return (\n              <Tooltip\n                TransitionComponent={Fade}\n                TransitionProps={{ timeout: 400 }}\n                title={item.label + \" \" + item.value + \"y\"}\n                placement=\"top-start\"\n                key={index}\n              >\n                <Box\n                  component=\"span\"\n                  sx={{\n                    background: item.color,\n                    width: ((item.value / TotalValues) * 100) + \"%\"\n                  }}\n                />\n              </Tooltip>\n            )\n          })}\n        </ProgressWrappr>\n        <Box\n          component=\"ul\"\n          p={0}\n          gap={1}\n          display=\"flex\"\n          flexWrap=\"wrap\"\n        >\n          {list.map((item: any, index: any) => {\n            return (\n              <Grid\n                container\n                item\n                key={index}\n                component=\"li\"\n                display=\"inline-flex\"\n                alignItems=\"center\"\n                flex={0}\n                spacing={0.5}\n                flexWrap=\"nowrap\"\n                sx={{\n                  listStyle: 'none',\n                  fontSize: 12,\n                  whiteSpace: 'nowrap'\n                }}\n              >\n                <Grid\n                  item\n                  component={CircleIcon}\n                  sx={{\n                    height: 12,\n                    width: 12,\n                    color: item.color,\n                  }}\n                />\n                <Grid\n                  item\n                  component=\"span\"\n                >\n                  {item.label}\n                </Grid>\n                <Grid\n                  item\n                  component=\"span\"\n                >\n                  {item.value}y\n                </Grid>\n              </Grid>\n            )\n          })}\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default GithubProgress;\n","import Box from '@mui/material/Box';\nimport About from './sidebar/About'\nimport GithubProgress from './sidebar/GithubProgress'\nimport SidebarItem from './sidebar/SidebarItem'\nimport { groupedSkills } from '../data/Skills'\n\nconst Sidebar = () => {\n  return (\n    <>\n      <Box>\n        <About />\n        {Object.entries(groupedSkills)\n          .map(([ groupName, items ], index: number) => (\n            <SidebarItem title={groupName} key={index}>\n              <GithubProgress list={items} />\n            </SidebarItem>\n          ))}\n      </Box>\n    </>\n  )\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nimport Sidebar from '../../components/Sidebar';\nimport FileNavigation from '../../components/FileNavigation';\nimport ListDirectory from '../../components/ListDirectory';\n\nimport { repositoryContext } from '../../contexts/repository';\n\nconst Overview = () => {\n  const {\n    selectedBranch: {\n      commit: {\n        sha\n      }\n    }\n  } = React.useContext(repositoryContext)\n\n  return (\n    <>\n      <Box>\n        <Grid\n          container\n          gap={3}\n          flexWrap=\"nowrap\"\n          flexDirection={{\n            xs: 'column-reverse',\n            md: 'row',\n          }}\n        >\n          <Grid item md={9} xs={12}>\n            <FileNavigation\n              mode=\"overview\"\n            />\n            <ListDirectory\n              type=\"tree\"\n              sha={sha}\n            />\n          </Grid>\n          <Grid item md={3} xs={12}>\n            <Sidebar />\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  )\n}\n\nexport default Overview;\n"],"names":["getColorCode","colorObj","index","Object","keys","reverse","find","key","i","skills","map","groupName","label","value","color","amber","blue","pink","orange","cyan","deepOrange","deepPurple","green","lime","indigo","lightBlue","lightGreen","skill","groupId","kebabcase","groupedSkills","fromEntries","filter","self","indexOf","item","groupList","styled","props","icon","text","Box","mt","GithubLink","href","className","SvgIcon","component","sx","height","width","marginRight","title","children","borderBottom","py","Typography","fontWeight","marginBottom","paragraph","Grid","container","alignItems","my","spacing","LinkIcon","MenuBookIcon","CopyrightIcon","StarBorderOutlinedIcon","RemoveRedEyeOutlinedIcon","ThumbUpAltOutlinedIcon","ThumbDownAltOutlinedIcon","ProgressWrappr","rest","list","TotalValues","reduce","prev","current","Tooltip","TransitionComponent","Fade","TransitionProps","timeout","placement","background","p","gap","display","flexWrap","flex","listStyle","fontSize","whiteSpace","CircleIcon","entries","items","sha","React","repositoryContext","selectedBranch","commit","flexDirection","xs","md","FileNavigation","mode","ListDirectory","type"],"sourceRoot":""}