{"version":3,"file":"static/js/286.4f0f332c.chunk.js","mappings":"qkCA0BA,EApB8C,SAACA,GAC7C,MAAwBC,EAAAA,SAAuB,IAAG,eAA1CC,EAAG,KAAEC,EAAM,KAcnB,OAZAF,EAAAA,WAAgB,WACd,IAAIG,EAIFA,EAHY,KAAVJ,GAAiB,OAAOK,KAAKL,GAG3BA,EAAMM,OAASC,EAAAA,OAAkBP,EAAMM,OAASC,EAAAA,OAAgB,EAFhE,EAINJ,EAAOI,EAASH,GAClB,GAAG,CACDJ,IAGK,CACLE,EAEJ,E,WCWA,EA9BY,WACV,OAAyBM,EAAAA,EAAAA,MAAjBC,GAAkC,YAAtB,GAEpB,EAAqBC,MACpBC,KAAKF,EAAaG,WAClBC,KAAI,YAAM,OAAN,YAAM,EAAW,IAAC,kBAEvB,EAAgBC,OAJH,IAAC,KAAE,GAIRZ,GAAqB,YAAlB,GACX,MAAY,KAARA,GACK,yBAGTa,QAAQC,MAAMd,IAEZ,+BACE,SAACe,EAAA,GAAI,CACHC,WAAS,EACTC,WAAW,SACXC,eAAe,SACfC,EAAG,EACHC,GAAI,CACFC,WAAY,OACZ,SAEDrB,MAIT,C","sources":["hooks/useCow.tsx","pages/cow/index.tsx"],"sourcesContent":["import React from 'react'\nimport messages from '../pages/cow/cow.json';\n\ntype useCowType = [\n  string\n]\nconst useCow: (level: string) => useCowType = (level: string) => {\n  const [ msg, setMsg ] = React.useState<string>('');\n\n  React.useEffect(() => {\n    let i;\n    if (level === \"\" || !/^v+$/.test(level)) {\n      i = 0;\n    } else {\n      i = level.length < messages.length ? level.length : messages.length-1;\n    }\n    setMsg(messages[i])\n  }, [\n    level\n  ])\n\n  return [\n    msg\n  ]\n}\n\nexport default useCow\n","import Grid from '@mui/material/Grid';\nimport { useSearchParams } from 'react-router-dom';\nimport useCow from '../../hooks/useCow'\n\n// Add more \"v\" on the param, it will be...\nconst Moo = () => {\n  const [ searchParams ] = useSearchParams();\n\n  const [ level=\"\" ] = Array\n  .from(searchParams.entries())\n  .map(([ key, ]) => key);\n\n  const [ msg ] = useCow(level)\n  if (msg === '') {\n    return <></>\n  }\n\n  console.error(msg)\n  return (\n    <>\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        p={3}\n        sx={{\n          whiteSpace: 'pre',\n        }}\n      >\n        {msg}\n      </Grid>\n    </>\n  )\n}\n\nexport default Moo;\n"],"names":["level","React","msg","setMsg","i","test","length","messages","useSearchParams","searchParams","Array","from","entries","map","useCow","console","error","Grid","container","alignItems","justifyContent","p","sx","whiteSpace"],"sourceRoot":""}