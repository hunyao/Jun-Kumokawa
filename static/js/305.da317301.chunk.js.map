{"version":3,"file":"static/js/305.da317301.chunk.js","mappings":"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","sources":["contexts/repository.tsx","plugins/Octokit.tsx","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from 'react';\nimport { OctokitInstance } from './../plugins/Octokit';\n\nexport interface RepositoryInterface {\n  branches: any,\n  tags: any,\n  commits: any,\n}\nexport interface RepositoryBranchInterface {\n  selectedBranch: string\n}\n\nexport const repositoryContext = React.createContext<any>({});\nexport const { Provider, Consumer } = repositoryContext;\n\nconst initial = {\n  branches: [],\n  tags: [],\n  commits: []\n}\nexport function RepositoryProvider({ children }: any) {\n  const [ state, dispatch ] = React.useState<any>(initial);\n  const [ selectedBranch, changeBranch ] = React.useState<any>({\n    name: '',\n    commit: {\n      sha: '',\n      url: ''\n    }\n  });\n  const [ allTrees, setAllTrees ] = React.useState<any>([]);\n\n  async function getAllData(uri: string) {\n    let p = 1\n    let arr: any = [];\n    while (true) {\n      const { data } = await OctokitInstance.request(`${uri}?per_page={per_page}&page={page}`, {\n        owner: process.env.REACT_APP_REPOSITORY_OWNER as string,\n        repo: process.env.REACT_APP_REPOSITORY_NAME as string,\n        per_page: 100,\n        page: p\n      })\n      if (data.length === 0 || p === 5) {\n        break;\n      } else {\n        arr = arr.concat(data);\n        p += 1\n      }\n    }\n    return arr;\n  }\n\n  React.useEffect(() => {\n    // OctokitInstance.request('GET /rate_limit', {})\n    Promise.all([\n      OctokitInstance.request('GET /repos/{owner}/{repo}/branches/master', {\n        owner: process.env.REACT_APP_REPOSITORY_OWNER as string,\n        repo: process.env.REACT_APP_REPOSITORY_NAME as string\n      }),\n      getAllData('GET /repos/{owner}/{repo}/branches'),\n      getAllData('GET /repos/{owner}/{repo}/tags'),\n      getAllData('GET /repos/{owner}/{repo}/commits'),\n    ])\n    .then(([ masterBranch, branches, tags, commits ]) => {\n      dispatch({\n        branches: Array.from([\n          ...branches,\n          masterBranch.data\n        ]),\n        tags: tags,\n        commits: commits\n      })\n      changeBranch(masterBranch.data)\n    })\n  }, [])\n  React.useEffect(() => {\n    if (selectedBranch.commit.sha === '') {\n      return;\n    }\n    OctokitInstance.request('GET /repos/{owner}/{repo}/git/trees/{tree_sha}?recursive=1', {\n      owner: process.env.REACT_APP_REPOSITORY_OWNER as string,\n      repo: process.env.REACT_APP_REPOSITORY_NAME as string,\n      tree_sha: selectedBranch.commit.sha\n    })\n    .then(({ data }) => {\n      setAllTrees(data)\n    })\n  }, [\n    selectedBranch\n  ])\n\n  const getPathFromSha = React.useCallback((sha: string) => {\n    if (allTrees.length === 0 || sha === \"\") {\n      return;\n    }\n    if (sha === selectedBranch.commit.sha) {\n      return ''\n    }\n    return allTrees.tree.find((t: any) => t.sha === sha).path\n  }, [\n    allTrees\n  ])\n\n  const getShafromPath = React.useCallback((path: string) => {\n    if (allTrees.length === 0) {\n      return;\n    }\n    return allTrees.tree.find((t: any) => t.path === path).sha\n  }, [\n    allTrees\n  ])\n\n  return (\n    <>\n      <Provider\n        value={{\n          state,\n          dispatch,\n          selectedBranch,\n          changeBranch,\n          allTrees,\n          getPathFromSha,\n          getShafromPath\n        }}>\n        {children}\n      </Provider>\n    </>\n  )\n}\nexport {\n  Consumer as RepositoryConsumer\n}\nexport default RepositoryProvider;\n\n// vim: sw=2:ai\n","import { Octokit } from '@octokit/core'\n\nexport const OctokitInstance = new Octokit();\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["repositoryContext","React","Provider","Consumer","initial","branches","tags","commits","RepositoryProvider","children","state","dispatch","name","commit","sha","url","selectedBranch","changeBranch","allTrees","setAllTrees","getAllData","uri","p","arr","OctokitInstance","owner","process","repo","per_page","page","data","length","concat","Promise","all","then","masterBranch","Array","from","tree_sha","getPathFromSha","tree","find","t","path","getShafromPath","value","Octokit","_assertThisInitialized","self","ReferenceError","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}