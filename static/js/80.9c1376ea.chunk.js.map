{"version":3,"file":"static/js/80.9c1376ea.chunk.js","mappings":"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","sources":["assets/svgs/svg-git-branch.tsx","components/ui/GithubBranchSwitching.tsx","components/ui/GithubBranchSwitchingTabs.tsx","components/ui/GithubBranchSwitchingTabPanel.tsx","components/ui/GithubInput.tsx","hooks/useFilterBranches.tsx","hooks/useFilterTags.tsx","hooks/useTags.tsx","components/BranchSwitchingModal.tsx","components/BranchSwitching.tsx","assets/svgs/svg-zip.tsx","components/ui/GithubCloneModal.tsx","components/ui/GithubClipboardBase.tsx","assets/svgs/svg-copy.tsx","components/GithubClipboardCopy.tsx","components/GithubCloneSelection.tsx","components/GithubCloneButton.tsx","hooks/useBranches.tsx","components/FileNavigation.tsx","plugins/MarkdownItNamedHeadings.tsx","plugins/MarkdownIt.tsx","components/ui/MarkdownPaper.tsx","components/MarkdownView.tsx","components/ui/SourceCodeViewLine.tsx","components/ui/SourceCodeViewLineNum.tsx","components/SourceCodeView.tsx","components/ui/FileViewToolbar.tsx","components/FileView.tsx","components/GithubDetailLink.tsx","components/ui/Expander.tsx","components/ui/ListDirectoryToolbar.tsx","hooks/useCommits.tsx","components/ListDirectoryHeader.tsx","components/ui/ListFilesItemRow.tsx","hooks/usePreviousSha.tsx","components/ListDirectoryContent.tsx","components/ListDirectory.tsx","components/Loading.tsx","components/ui/GithubButton.tsx","contexts/repository.tsx","hooks/useCurrentBranch.tsx","hooks/usePathToSha.tsx","hooks/useShaToPath.tsx","plugins/Octokit.tsx"],"sourcesContent":["import { createSvgIcon } from '@mui/material/utils';\n\nconst GitBranchIcon = createSvgIcon(\n  <path fillRule=\"evenodd\" d=\"M11.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122V6A2.5 2.5 0 0110 8.5H6a1 1 0 00-1 1v1.128a2.251 2.251 0 11-1.5 0V5.372a2.25 2.25 0 111.5 0v1.836A2.492 2.492 0 016 7h4a1 1 0 001-1v-.628A2.25 2.25 0 019.5 3.25zM4.25 12a.75.75 0 100 1.5.75.75 0 000-1.5zM3.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0z\"></path>,\n  'GitBranchIcon'\n);\n\nexport default GitBranchIcon;\n","import React from 'react'\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\n\nconst GithubBranchSwitching = styled(({className, children, ...rest}: any) => {\n  return <Box\n    className={className + \" github-branch-switching\"}\n    sx={{zIndex: (theme) => theme.zIndex.drawer + 1}}\n    {...rest}\n  >\n    <Box\n      className=\"modal\"\n    >\n      {children}\n    </Box>\n  </Box>\n})`\n& {\n  position: absolute;\n  top: auto;\n  right: auto;\n  bottom: auto;\n  left: auto;\n  padding: 0;\n  pointer-events: none;\n  display: none;\n  transition: ease;\n  animation-name: GithubBranchSwitchingAnimation;\n  animation-duration: 0.3s;\n}\n& .modal {\n  pointer-events: auto;\n  width: 300px;\n  height: auto;\n  max-height: 480px;\n  margin: 8px 0 16px 0;\n  font-size: 12px;\n  border-color: #30363d;\n  border-radius: 6px;\n  box-shadow: 0 8px 24px #010409;\n  position: relative;\n  background-color: #161b22;\n  border: 1px solid #484f58;\n  overflow: hidden;\n}\n& .github-branch-switching-item {\n  border-bottom: 1px solid #21262d;\n}\n&.active {\n  display: block;\n}\n@keyframes GithubBranchSwitchingAnimation {\n  0% {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n`\n\nexport default GithubBranchSwitching;\n","import React from 'react'\nimport Tabs from '@mui/material/Tabs';\nimport { styled } from '@mui/material/styles';\n\nconst GithubBranchSwitchingTabs = styled(({className, ...rest}: any) => {\n  return <Tabs className={className + \" github-branch-switching-tabs\"} {...rest} />\n})`\n& {\n  padding: 8px 8px 0 8px;\n  min-height: initial;\n  box-shadow: inset 0 -1px 0 #21262d;\n  overflow: auto;\n}\n& .MuiTabs-indicator {\n  width: 0;\n  height: 0;\n}\n& .MuiTab-root {\n  text-transform: initial;\n  color: #8b949e;\n  padding: 4px 16px;\n  min-height: initial;\n  font-size: 12px;\n}\n& .MuiTab-root.Mui-selected {\n  background-color: #161b22;\n  border: 1px solid #21262d;\n  border-bottom-width: 0;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n\n& .MuiTab-root.Mui-selected,\n& .MuiTab-root:hover {\n  color: #c9d1d9;\n}\n`\n\nexport default GithubBranchSwitchingTabs\n","import React from 'react'\nimport TabPanel from '@mui/lab/TabPanel';\nimport { styled } from '@mui/material/styles';\n\nconst GithubBranchSwitchingTabPanel = styled(({className, ...rest}: any) => (\n  <TabPanel className={className + \" github-branch-switching-tab-panel\"} {...rest} />\n))`\n& {\n  padding: 0;\n  max-height: 357px;\n  overflow-y: auto;\n}\n& .github-branch-switching-list-item-icon {\n  min-width: 16px;\n  margin-right: 8px;\n  font-size: 12px;\n\n  svg.icon {\n    font-size: 16px;\n  }\n}\n& .github-branch-switching-list-item-text {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  width: 1px;\n}\n`\n\nexport default GithubBranchSwitchingTabPanel;\n","import React from 'react'\nimport { styled } from '@mui/material/styles';\n\nconst GithubInput = styled(({className, ...rest}: any) => {\n  return <input className={className + \" github-input\"} {...rest} />\n})`\n& {\n  font-size: 14px;\n  display: block;\n  width: 100%;\n  padding: 5px 12px;\n  line-height: 20px;\n  color: #c9d1d9;\n  background-color: #0d1117;\n  background-repeat: no-repeat;\n  background-position: right 8px center;\n  border: 1px solid #30363d;\n  border-radius: 6px;\n  box-shadow: 0 0 transparent;\n  transition: 80ms cubic-bezier(0.33, 1, 0.68, 1);\n  transition-property: color,background-color,box-shadow,border-color;\n  box-sizing: border-box;\n}\n&:focus {\n  border-color: #58a6ff;\n  outline: none;\n  box-shadow: inset 0 0 0 1px transparent;\n}\n`\n\nexport default GithubInput\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\n\nconst useFilterBranches = (filteringText: string) => {\n  const {\n    state: {\n      branches\n    }\n  } = React.useContext(repositoryContext);\n\n  return [\n    React.useMemo(() => {\n      return branches.filter((branch: any) => branch.name.includes(filteringText))\n    }, [\n      branches,\n      filteringText\n    ])\n  ]\n}\n\nexport default useFilterBranches\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\n\nconst useFilterTags = (filteringText: string) => {\n  const {\n    state: {\n      tags\n    }\n  } = React.useContext(repositoryContext);\n\n  return [\n    React.useMemo(() => {\n      return tags.filter((branch: any) => branch.name.includes(filteringText))\n    }, [\n      tags,\n      filteringText\n    ])\n  ]\n}\n\nexport default useFilterTags\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\n\nconst useTags = () => {\n  const {\n    state: {\n      tags\n    }\n  } = React.useContext(repositoryContext);\n\n  const tagsMemo = React.useMemo(() => tags, [tags]);\n  const tagsNumberMemo = React.useMemo(() => tags.length, [tags]);\n\n  return [\n    tagsMemo,\n    tagsNumberMemo\n  ]\n}\n\nexport default useTags\n","import React from 'react'\nimport Grid from '@mui/material/Grid';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport GithubBranchSwitching from './ui/GithubBranchSwitching';\nimport GithubBranchSwitchingTabs from './ui/GithubBranchSwitchingTabs';\nimport GithubBranchSwitchingTabPanel from './ui/GithubBranchSwitchingTabPanel';\nimport GithubInput from './ui/GithubInput';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport useCurrentBranch from '../hooks/useCurrentBranch'\nimport useFilterBranches from '../hooks/useFilterBranches'\nimport useFilterTags from '../hooks/useFilterTags'\nimport useTags from '../hooks/useTags'\n\nconst BranchSwitchingModal = (props: any) => {\n  const {\n    open\n  } = props;\n\n  const [ selectedTab, setSelectedTab ] = React.useState(0);\n  const [ searchingWords, setSearchingWords ] = React.useState(\"\");\n  const [ currentBranchName, , ,changeBranch ] = useCurrentBranch();\n  const [ filteredBranches ] = useFilterBranches(searchingWords);\n  const [ filteredTags ] = useFilterTags(searchingWords);\n  const [ ,tagsNumber ] = useTags();\n\n  const placeholderMemo = React.useMemo(() => {\n    if (selectedTab === 0) {\n      return 'Find a branch';\n    } else if (selectedTab === 1) {\n      return 'Find a tag';\n    } else {}\n  }, [\n    selectedTab\n  ])\n\n  const renderList = React.useCallback((filteredItems) => {\n    return filteredItems.map((item: any, index: number) => (\n      <ListItem disablePadding key={index}>\n        <ListItemButton onClick={() => changeBranch(item)}>\n          <ListItemIcon\n            className=\"github-branch-switching-list-item-icon\"\n          >\n            <CheckIcon\n              className=\"icon\"\n              sx={{\n                display: currentBranchName === item.name ? 'inherit': 'none'\n              }}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={item.name}\n            disableTypography\n            className=\"github-branch-switching-list-item-text\"\n          />\n        </ListItemButton>\n      </ListItem>\n    ))\n  }, [\n    currentBranchName,\n    changeBranch\n  ]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setSearchingWords(\"\")\n    }\n  }, [\n    open\n  ])\n\n  return (\n    <GithubBranchSwitching\n      className={open ? 'active': ''}\n    >\n      <Grid\n        p={1}\n        pl={2}\n        container\n        component=\"header\"\n        className=\"github-branch-switching-item\"\n      >\n        <Grid\n          item\n          component=\"span\"\n          flex={1}\n          sx={{fontWeight: 'bold'}}\n        >\n          Switch branches/tags\n        </Grid>\n        <Grid\n          item\n          component={IconButton}\n          p={0}\n        >\n          <SvgIcon\n            component={CloseIcon}\n            sx={{fontSize: 16}}\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        flexDirection=\"column\"\n      >\n        <Grid\n          item\n          p={1}\n          className=\"github-branch-switching-item\"\n        >\n          <GithubInput\n            placeholder={placeholderMemo}\n            value={searchingWords}\n            onChange={({target: { value }}: any) => setSearchingWords(value)}\n          />\n        </Grid>\n        <Grid\n          item\n          p={1}\n        >\n          <TabContext value={String(selectedTab)}>\n            <GithubBranchSwitchingTabs\n              value={selectedTab}\n              onChange={(_: any, newValue: number) => setSelectedTab(newValue)}\n            >\n              <Tab label=\"Branches\" disableRipple value={0} />\n              <Tab label=\"Tags\" disableRipple value={1} />\n            </GithubBranchSwitchingTabs>\n            <GithubBranchSwitchingTabPanel value=\"0\">\n              <List>\n                {renderList(filteredBranches)}\n              </List>\n            </GithubBranchSwitchingTabPanel>\n            <GithubBranchSwitchingTabPanel value=\"1\">\n              <List>\n                {tagsNumber === 0 &&\n                <ListItem\n                  disablePadding\n                  disableGutters\n                  component={Typography}\n                  sx={{\n                    justifyContent: 'center',\n                    fontSize: 12\n                  }}\n                >\n                  Nothing to show\n                </ListItem>}\n                {renderList(filteredTags)}\n              </List>\n            </GithubBranchSwitchingTabPanel>\n          </TabContext>\n        </Grid>\n      </Grid>\n    </GithubBranchSwitching>\n  )\n}\n\nexport default BranchSwitchingModal\n","import React from 'react'\nimport Box from '@mui/material/Box';\nimport GithubButton from './ui/GithubButton'\nimport SvgIcon from '@mui/material/SvgIcon';\nimport GitBranchIcon from '../assets/svgs/svg-git-branch';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport BranchSwitchingModal from './BranchSwitchingModal';\nimport useCurrentBranch from '../hooks/useCurrentBranch'\n\nconst BranchSwitching = (props: any) => {\n  const [ open, setOpen ] = React.useState(false);\n  const [ currentBranchName ] = useCurrentBranch();\n\n  return (\n    <ClickAwayListener onClickAway={() => setOpen(false)}>\n      <Box>\n        <GithubButton onClick={() => setOpen(!open)}>\n          <SvgIcon\n            component={GitBranchIcon}\n            viewBox=\"0 0 16 16\"\n            fontSize=\"small\"\n          />\n          <Box\n            component=\"span\"\n            sx={{\n              maxWidth: 125,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              display: 'inline-block'\n            }}\n          >\n            {currentBranchName}\n          </Box>\n          <SvgIcon component={ArrowDropDownIcon} />\n        </GithubButton>\n        <BranchSwitchingModal open={open} />\n      </Box>\n    </ClickAwayListener>\n  )\n}\n\nexport default BranchSwitching\n","import { createSvgIcon } from '@mui/material/utils';\n\nconst ZipIcon = createSvgIcon(\n    <path fillRule=\"evenodd\" d=\"M3.5 1.75a.25.25 0 01.25-.25h3a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h2.086a.25.25 0 01.177.073l2.914 2.914a.25.25 0 01.073.177v8.586a.25.25 0 01-.25.25h-.5a.75.75 0 000 1.5h.5A1.75 1.75 0 0014 13.25V4.664c0-.464-.184-.909-.513-1.237L10.573.513A1.75 1.75 0 009.336 0H3.75A1.75 1.75 0 002 1.75v11.5c0 .649.353 1.214.874 1.515a.75.75 0 10.752-1.298.25.25 0 01-.126-.217V1.75zM8.75 3a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM6 5.25a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5A.75.75 0 016 5.25zm2 1.5A.75.75 0 018.75 6h.5a.75.75 0 010 1.5h-.5A.75.75 0 018 6.75zm-1.25.75a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM8 9.75A.75.75 0 018.75 9h.5a.75.75 0 010 1.5h-.5A.75.75 0 018 9.75zm-.75.75a1.75 1.75 0 00-1.75 1.75v3c0 .414.336.75.75.75h2.5a.75.75 0 00.75-.75v-3a1.75 1.75 0 00-1.75-1.75h-.5zM7 12.25a.25.25 0 01.25-.25h.5a.25.25 0 01.25.25v2.25H7v-2.25z\"></path>,\n  'ZipIcon'\n);\n\nexport default ZipIcon;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\n\nconst GithubCloneModal = React.forwardRef(({ className, children, ...rest }: any, ref) => (\n  <Box className={className + \" github-clone-modal\"} {...rest} ref={ref}>\n    <Box\n      className={\"modal\"}\n      sx={{zIndex: (theme) => theme.zIndex.drawer + 1}}\n    >\n      {children}\n    </Box>\n  </Box>\n))\n\nexport default styled(GithubCloneModal)`\n& {\n  background-color: #161b22;\n  position: relative;\n  display: none;\n\n  &.active {\n    display: block;\n  }\n}\n& > .modal:before {\n  position: absolute;\n  display: inline-block;\n  content: \"\";\n  top: -16px;\n  right: 9px;\n  left: auto;\n  border: 8px solid transparent;\n  border-bottom-color: #30363d;\n}\n& > .modal {\n  position: absolute;\n  top: 6px;\n  right: 0;\n  left: auto;\n  width: 378px;\n  margin-top: 2px;\n  border: 1px solid #30363d;\n  border-radius: 6px;\n  box-shadow: 0 8px 24px #010409;\n  padding: 0;\n  background-clip: padding-box;\n  background-color: #161b22;\n\n  .header {\n    font-weight: bold;\n  }\n}\n& svg {\n  vertical-align: text-bottom;\n}`\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport InputBase from '@mui/material/InputBase';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\n\nconst GithubClipboardCopyBase = styled(({ className, inputBaseProps, buttonProps, ...rest }: any) => (\n  <Box\n    className={className + \" github-clipboard-copy-base\"}\n    {...rest}\n  >\n    <InputBase {...inputBaseProps} />\n    <Button variant=\"outlined\" {...buttonProps} />\n  </Box>\n))`\n& {\n  display: flex;\n\n  .MuiInputBase-root {\n    flex: 1;\n\n    input {\n      border: 1px solid #30363d;\n      border-radius: 6px;\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n      padding: 3px 12px;\n      color: #c9d1d9;\n      font-size: 12px;\n    }\n    input:focus {\n      border-color: #58a6ff;\n      outline: none;\n      box-shadow: inset 0 0 0 1px transparent;\n    }\n  }\n  .MuiButton-root {\n    min-width: initial;\n    color: #c9d1d9;\n    background-color: #21262d;\n    border-color: rgba(240,246,252,0.1);\n    box-shadow: 0 0 transparent, 0 0 transparent;\n    transition: 80ms cubic-bezier(0.33, 1, 0.68, 1);\n    transition-property: all;\n    transition-property: color,background-color,box-shadow,border-color;\n  }\n  svg {\n    font-size: 12px;\n  }\n}`\n\nexport default GithubClipboardCopyBase;\n","import { createSvgIcon } from '@mui/material/utils';\n\nconst CopyIcon = createSvgIcon(\n  <><path fillRule=\"evenodd\" d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"></path><path fillRule=\"evenodd\" d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"></path></>,\n  'CopyIcon'\n);\n\nexport default CopyIcon;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport GithubClipboardCopyBase from './ui/GithubClipboardBase'\nimport CopyIcon from '../assets/svgs/svg-copy';\nimport CheckIcon from '@mui/icons-material/Check';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nconst GithubClipboardCopy = (props: any) => {\n  const {\n    copyText\n  } = props;\n\n  const defaultIcon = React.useMemo(() => {\n    return <SvgIcon viewBox=\"0 0 16 16\" component={CopyIcon} />\n  }, [])\n  const afterClickedIcon = React.useMemo(() => {\n    return <SvgIcon component={CheckIcon} sx={{color: '#238636'}} />\n  }, [])\n\n  const [ clicked, setClicked ] = React.useState(false);\n  const [ icon, setIcon ] = React.useState(defaultIcon);\n\n  const onClickInput = (e: any) => {\n    e.target.select();\n  }\n\n  const onClickButton = () => {\n    navigator.clipboard.writeText(copyText)\n    setClicked(true);\n  }\n\n  React.useEffect(() => {\n    if (clicked) {\n      setIcon(afterClickedIcon);\n      setTimeout(() => {\n        setIcon(defaultIcon)\n        setClicked(false)\n      }, 3000)\n    }\n  }, [\n    clicked,\n    afterClickedIcon,\n    defaultIcon\n  ])\n\n  return (\n    <Box py={1}>\n      <GithubClipboardCopyBase\n        inputBaseProps={{\n          value: copyText,\n          onClick: onClickInput\n        }}\n        buttonProps={{\n          onClick: onClickButton,\n          children: icon\n        }}\n      />\n    </Box>\n  )\n}\n\nexport default GithubClipboardCopy;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport TabMenu from './TabMenu';\nimport { repositoryContext } from '../contexts/repository';\nimport GithubClipboardCopy from './GithubClipboardCopy';\n\nconst Menus = [\n  {\n    name: 'HTTPS',\n    menuId: 0,\n    icon: null,\n    keyName: 'clone_url',\n    subtitle: 'Use Git or checkout with SVN using the web URL.'\n  },\n  {\n    name: 'SSH',\n    menuId: 1,\n    icon: null,\n    keyName: 'ssh_url',\n    subtitle: 'Use a password-protected SSH key.'\n  },\n  {\n    name: 'Github CLI',\n    menuId: 2,\n    icon: null,\n    keyName: 'git_url',\n    subtitle: 'Work fast with our official CLI. Learn more.'\n  }\n]\n\nconst GithubCloneSelection = (props: any) => {\n  const [ menuId, setMenuId ] = React.useState(0);\n  const [ copyText, setCopyText ] = React.useState('');\n\n  const {\n    state: {\n      repository\n    }\n  } = React.useContext(repositoryContext);\n\n  React.useEffect(() => {\n    if (repository[Menus[menuId].keyName] !== undefined) {\n      setCopyText(repository[Menus[menuId].keyName]);\n    }\n  }, [\n    repository,\n    menuId\n  ])\n\n  return (\n    <Box mt={1}>\n      <TabMenu\n        menus={Menus}\n        value={menuId}\n        onChange={(val: number) => setMenuId(val)}\n      />\n      <GithubClipboardCopy\n        copyText={copyText}\n      />\n      <Box\n        sx={{\n          fontSize: 12,\n          mt: 1,\n          color: '#8b949e'\n        }}\n      >\n        {Menus[menuId].subtitle}\n      </Box>\n    </Box>\n  )\n}\n\nexport default GithubCloneSelection;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport GithubButton from './ui/GithubButton'\nimport SvgIcon from '@mui/material/SvgIcon';\nimport ZipIcon from '../assets/svgs/svg-zip';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport GithubCloneModal from './ui/GithubCloneModal'\nimport TerminalIcon from '@mui/icons-material/Terminal';\nimport HelpOutlineOutlinedIcon from '@mui/icons-material/HelpOutlineOutlined';\nimport GithubLink from './ui/GithubLink'\nimport Tooltip from '@mui/material/Tooltip';\nimport GithubCloneSelection from './GithubCloneSelection'\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport useCurrentBranch from '../hooks/useCurrentBranch'\n\nconst GithubCloneButton = (props: any) => {\n  const [open, setOpen] = React.useState(false);\n  const [ currentBranchName ] = useCurrentBranch();\n\n  return (\n    <ClickAwayListener onClickAway={() => setOpen(false)}>\n      <Box>\n        <GithubButton\n          className=\"primary\"\n          onClick={() => setOpen(!open)}\n        >\n          <span>\n            Code\n          </span>\n          <SvgIcon component={ArrowDropDownIcon} />\n        </GithubButton>\n        <GithubCloneModal\n          className={open ? 'active': ''}\n        >\n          <Box p={2}>\n            <Grid\n              container\n              className=\"header\"\n            >\n              <Grid item>\n                <SvgIcon\n                  component={TerminalIcon}\n                  sx={{\n                    fontSize: 16,\n                    marginRight: 1\n                  }}\n                />\n                Clone\n              </Grid>\n              <Grid\n                item\n                ml=\"auto\"\n              >\n                <Tooltip title=\"Which remote URL should I use?\">\n                  <GithubLink\n                    className=\"no-underline primary\"\n                    href=\"#\"\n                  >\n                    <strong>\n                      <span>\n                        <SvgIcon\n                          component={HelpOutlineOutlinedIcon}\n                          sx={{\n                            fontSize: 16\n                          }}\n                        />\n                      </span>\n                    </strong>\n                  </GithubLink>\n                </Tooltip>\n              </Grid>\n            </Grid>\n            <GithubCloneSelection />\n          </Box>\n          <Box p={2}\n            sx={{\n              borderTop: '1px solid #21262d'\n            }}\n          >\n            <Box\n              component={\"a\"}\n              href={\n                \"https://github.com/\"\n              + process.env.REACT_APP_REPOSITORY_OWNER\n              + \"/\"\n              + process.env.REACT_APP_REPOSITORY_NAME\n              + \"/archive/refs/heads/\"\n              + currentBranchName\n              + \".zip\"\n              }\n              sx={{\n                color: '#c9d1d9',\n                '&:hover': {\n                  textDecoration: 'none'\n              }}}\n            >\n              <SvgIcon\n                component={ZipIcon}\n                viewBox=\"0 0 16 16\"\n                sx={{fontSize: 16, mr:1}}\n              />\n              Download ZIP\n            </Box>\n          </Box>\n        </GithubCloneModal>\n      </Box>\n    </ClickAwayListener>\n  )\n}\n\nexport default GithubCloneButton;\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\n\nconst useBranches = () => {\n  const {\n    state: {\n      branches\n    }\n  } = React.useContext(repositoryContext);\n\n  const branchesMemo = React.useMemo(() => branches, [branches]);\n  const branchesNumberMemo = React.useMemo(() => branches.length, [branches]);\n\n  return [\n    branchesMemo,\n    branchesNumberMemo\n  ]\n}\n\nexport default useBranches\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport GitBranchIcon from '../assets/svgs/svg-git-branch';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport LocalOfferOutlinedIcon from '@mui/icons-material/LocalOfferOutlined';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport GithubDetailLink from './GithubDetailLink'\nimport GithubButton from './ui/GithubButton'\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport GithubLink from './ui/GithubLink';\nimport { useNavigate } from \"react-router-dom\";\nimport BranchSwitching from '../components/BranchSwitching'\nimport GithubCloneButton from '../components/GithubCloneButton'\nimport useBranches from '../hooks/useBranches'\nimport useTags from '../hooks/useTags'\nimport usePathToSha from '../hooks/usePathToSha'\nimport useShaToPath from '../hooks/useShaToPath'\n\n// mode: overview | navigation\nconst FileNavigation = (props: any) => {\n  const {\n    mode,\n    sha\n  } = props;\n  const navigate = useNavigate();\n  const [ , branchesNumber ] = useBranches();\n  const [ , tagsNumber ] = useTags();\n  const getShafromPath = usePathToSha();\n  const getPathFromSha = useShaToPath();\n\n  const RenderDom = React.useMemo(() => {\n    if (mode === \"overview\") {\n      return (\n        <>\n          <Grid item ml={2}>\n            <GithubDetailLink\n              href=\"#\"\n              icon={\n                <SvgIcon\n                  component={GitBranchIcon}\n                  viewBox=\"0 0 16 16\"\n                />\n              }\n              number={branchesNumber}\n              name=\"branches\"\n            />\n          </Grid>\n          <Grid item ml={2}>\n            <GithubDetailLink\n              href=\"#\"\n              icon={\n                <SvgIcon\n                  component={LocalOfferOutlinedIcon}\n                />\n              }\n              number={tagsNumber}\n              name=\"tags\"\n            />\n          </Grid>\n          <Grid item ml=\"auto\">\n            <GithubButton\n              onClick={() => navigate('/find')}\n            >\n              <span>\n                Go to file\n              </span>\n            </GithubButton>\n          </Grid>\n          <Grid item ml={1}>\n            <GithubButton>\n              <span>\n                Add file\n              </span>\n              <SvgIcon component={ArrowDropDownIcon} />\n            </GithubButton>\n          </Grid>\n          <Grid item ml={1}>\n            <GithubCloneButton />\n          </Grid>\n        </>\n      )\n    } else if (mode === \"navigation\") {\n      const [ path ] = getPathFromSha(sha);\n      if (path === undefined) {\n        return;\n      }\n      const uris = path.split('/');\n      const lastUri = uris.pop();\n\n      return (\n        <>\n          <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{\n              marginLeft: 1\n            }}\n          >\n            <GithubLink\n              href=\"#\"\n              className=\"active\"\n              sx={{\n                fontWeight: 600\n              }}\n              onClick={(e: any) => {\n                e.preventDefault();\n                navigate(\"/\");\n              }}\n            >\n              {process.env.REACT_APP_REPOSITORY_NAME}\n            </GithubLink>\n            {uris.map((uri: string, index: number, self: string[]) => {\n              return <GithubLink\n                key={index}\n                href=\"#\"\n                className=\"active\"\n                onClick={(e: any) => {\n                  e.preventDefault();\n                  navigate(\n                    \"/tree/\"\n                    + getShafromPath(\n                      self.slice(0, index + 1)\n                      .map((p: string) => encodeURIComponent(p))\n                      .join('/')\n                    )\n                  );\n                }}\n              >\n                {uri}\n              </GithubLink>\n            })}\n            <Typography\n              color=\"text.primary\"\n              sx={{\n                fontSize: 14\n              }}\n            >\n              {lastUri}\n            </Typography>\n          </Breadcrumbs>\n          <Grid item ml=\"auto\">\n            <GithubButton\n              onClick={() => navigate('/find')}\n            >\n              <span>\n                Go to file\n              </span>\n            </GithubButton>\n          </Grid>\n          <Grid item ml={1}>\n            <GithubButton>\n              <SvgIcon component={MoreHorizIcon} />\n            </GithubButton>\n          </Grid>\n        </>\n      )\n    } else {}\n  }, [\n    mode,\n    branchesNumber,\n    tagsNumber,\n    getPathFromSha,\n    sha,\n    navigate,\n    getShafromPath\n  ])\n\n  return (\n    <>\n      <Grid\n        container\n        mt={3}\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <BranchSwitching />\n        </Grid>\n        {RenderDom}\n      </Grid>\n    </>\n  )\n}\n\nexport default FileNavigation;\n","import type MarkdownIt from 'markdown-it';\nimport type StateCore from 'markdown-it/lib/rules_core/state_core';\nimport type Token from 'markdown-it/lib/token';\nimport kebabcase from 'lodash.kebabcase';\nimport unidecode from 'unidecode';\n\nfunction plugin(md: MarkdownIt, options: MarkdownIt.Options) {\n  md.core.ruler.push('named_headings', namedHeadings.bind(null, md))\n}\n\nfunction namedHeadings (md: MarkdownIt, state: StateCore) {\n  var ids: any = {}\n\n  state.tokens.forEach(function (token: Token, i: number) {\n    if (token.type === 'heading_open') {\n      var text = md.renderer.render(state.tokens[i + 1].children as Token[], md.options, [])\n      var id = kebabcase(unidecode(text))\n      var uniqId = uncollide(ids, id)\n      ids[uniqId] = true\n      setAttr(token, 'id', uniqId)\n    }\n  })\n}\n\nfunction uncollide (ids: any, id: string) {\n  if (!ids[id]) return id\n    var i = 1\n  while (ids[id + '-' + i]) { i++ }\n  return id + '-' + i\n}\n\nfunction setAttr (token: Token, attr: string, value: string) {\n  var idx = token.attrIndex(attr)\n\n  if (idx === -1) {\n    token.attrPush([ attr, value ])\n  // } else if (options && options.append) {\n  //   token.attrs[idx][1] =\n  //     token.attrs[idx][1] + ' ' + value\n  } else {\n    if (token.attrs) {\n      token.attrs[idx][1] = value\n    }\n  }\n}\n\nexport default plugin;\n","import MarkdownIt from 'markdown-it';\nimport MarkdownItHighlightjs from 'markdown-it-highlightjs';\n// import HighlightTypescript from 'highlight.js/lib/languages/typescript';\n// import HighlightShell from 'highlight.js/lib/languages/shell';\nimport Highlightjs from 'highlight.js/lib/core';\nimport MarkdownItNamedHeadings from './MarkdownItNamedHeadings';\nimport MarkdownItEmoji from 'markdown-it-emoji';\n\n// Highlightjs.registerLanguage(\n//   'typescript',\n//   HighlightTypescript\n// )\n// Highlightjs.registerLanguage(\n//   'shell',\n//   HighlightShell\n// )\n\nconst md = new MarkdownIt()\n.use(MarkdownItHighlightjs, {\n  breaks: true,\n  inline: true,\n  hljs: Highlightjs\n})\n.use(MarkdownItNamedHeadings)\n.use(MarkdownItEmoji, {\n  defs: {\n    japan: '🇯🇵',\n    estonia: '🇪🇪',\n    earth: '🌏',\n    thinking: '🤔',\n  }\n})\n;\n\nexport default md;\n","import { styled } from '@mui/material/styles';\n\nconst MarkdownPaper = styled(\"div\")`\n& {\n  line-height: 1.5;\n  font-size: 16px;\n}\n& h1 {\n  padding-bottom: .3em;\n  font-size: 2em;\n  border-bottom: 1px solid #21262d;\n}\n& h2 {\n  padding-bottom: .3em;\n  font-size: 1.5em;\n  border-bottom: 1px solid #21262d;\n}\n`\n\nexport default MarkdownPaper;\n","import MarkdownIt from '../plugins/MarkdownIt';\nimport MarkdownPaper from './ui/MarkdownPaper'\n\nconst MarkdownView = ({ text }: { text: string }) => {\n  return <MarkdownPaper\n    sx={{\n      marginX: 4,\n      marginY: 2\n    }}\n    dangerouslySetInnerHTML={{\n      __html: MarkdownIt.render(text)\n    }}\n  />\n}\n\nexport default MarkdownView;\n","import { styled } from '@mui/material/styles';\n\nconst SourceCodeViewLine = styled('td')`\n&:before {\n  content: attr(data-line-number);\n}\n& {\n  overflow: visible;\n  font-size: 12px;\n  color: #c9d1d9;\n  word-wrap: normal;\n  white-space: pre;\n\n  position: relative;\n  padding-right: 10px;\n  padding-left: 10px;\n  line-height: 20px;\n  vertical-align: top;\n}\n`\n\nexport default SourceCodeViewLine;\n","import { styled } from '@mui/material/styles';\n\nconst SourceCodeViewLineNum = styled('td')`\n&:before {\n  content: attr(data-line-number);\n}\n& {\n  width: 1%;\n  min-width: 50px;\n  padding-right: 10px;\n  padding-left: 10px;\n  font-size: 12px;\n  line-height: 20px;\n  color: #484f58;\n  text-align: right;\n  white-space: nowrap;\n  vertical-align: top;\n  cursor: pointer;\n  user-select: none;\n}\n`\n\nexport default SourceCodeViewLineNum;\n","import React from 'react';\nimport Highlightjs from 'highlight.js';\nimport Box from '@mui/material/Box';\nimport GithubLink from './ui/GithubLink'\nimport SourceCodeViewLine from './ui/SourceCodeViewLine'\nimport SourceCodeViewLineNum from './ui/SourceCodeViewLineNum'\n\nconst SourceCodeView = (props: any) => {\n  const {\n    extention,\n    content,\n    binary,\n    image,\n    mime,\n    filename\n  } = props;\n\n  const RenderDom = React.useMemo(() => {\n    if (binary && !image) {\n      return <Box display=\"flex\" justifyContent=\"center\">\n        <Box p={2}>\n          <GithubLink\n            href={`data:${mime};base64,${btoa(content)}`}\n            className=\"active\"\n            download={filename}\n          >\n            View raw\n          </GithubLink>\n        </Box>\n      </Box>\n    } else if (binary && image) {\n      return <Box\n        component=\"img\"\n        src={`data:${mime};base64,${btoa(content)}`}\n        p={2}\n      />\n    } else {\n      const supportedLangeage = Highlightjs.getLanguage(extention) !== undefined;\n      return <table>\n        <tbody>\n        {content.split(\"\\n\").map((line: string, index: number) => {\n          return <tr key={index}>\n            <SourceCodeViewLineNum\n              data-line-number={index+1}\n            />\n            <SourceCodeViewLine\n              dangerouslySetInnerHTML={{\n                __html: supportedLangeage ? Highlightjs.highlight(line, {\n                  language: extention\n                }).value : line\n              }}\n            />\n          </tr>\n        })}\n        </tbody>\n      </table>\n    }\n  }, [\n    content,\n    binary,\n    image,\n    extention,\n    mime,\n    filename\n  ])\n\n  return (\n    <>\n      {RenderDom}\n    </>\n  )\n}\n\nexport default SourceCodeView;\n","import Toolbar from '@mui/material/Toolbar';\nimport { styled } from '@mui/material/styles';\n\nconst FileViewToolbar = styled(Toolbar)`\n& {\n  border-bottom: 1px solid #21262d;\n  padding: 8px;\n  min-height: initial;\n}\n`\n\nexport default FileViewToolbar;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport ListIcon from '@mui/icons-material/List';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport MarkdownView from './MarkdownView';\nimport SourceCodeView from './SourceCodeView';\nimport FileViewToolbar from './ui/FileViewToolbar'\nimport GithubLink from './ui/GithubLink'\nimport mimeTypes from \"mime-types\";\nimport Loading from './Loading'\n\nconst FileView = (props: any) => {\n  const {\n    filename,\n    content,\n    mode,\n    binary,\n    image,\n    mime,\n    sx = {},\n    loading\n  } = props;\n\n  const RenderDom = React.useMemo(() => {\n    if (filename === undefined) {\n      return;\n    }\n    const extention = filename.split(\".\").pop()\n    if (mode === \"readme\" || extention === 'md') {\n      return <MarkdownView text={content} />\n    } else if (mode === \"sourceCode\") {\n      return <SourceCodeView\n        content={content}\n        extention={extention}\n        binary={binary}\n        image={image}\n        mime={mime === undefined || mime === \"\" ? mimeTypes.contentType(filename) : mime}\n        filename={filename.split('/').pop()}\n      />\n    } else {}\n  }, [\n    mode,\n    content,\n    binary,\n    image,\n    mime,\n    filename,\n  ])\n\n  return (\n    <>\n      <span id=\"contentView\" />\n      <Paper\n        variant=\"outlined\"\n        sx={{\n          margin: '1rem 0',\n          color: 'inherit',\n          ...sx\n        }}\n      >\n        <FileViewToolbar>\n          <IconButton>\n            <ListIcon />\n          </IconButton>\n          <GithubLink href=\"#contentView\">{filename}</GithubLink>\n        </FileViewToolbar>\n        <Box\n          sx={{\n            overflow: 'auto'\n          }}\n        >\n          <Loading loading={loading}>\n            {RenderDom}\n          </Loading>\n        </Box>\n      </Paper>\n    </>\n  )\n}\n\nexport default FileView;\n","import GithubLink from './ui/GithubLink'\n\nconst GithubDetailLink = (props: any) => {\n  const {\n    href,\n    icon,\n    number,\n    name\n  } = props;\n\n  return (\n    <>\n      <GithubLink\n        className=\"no-underline primary\"\n        href={href}\n      >\n        <strong>\n          <span>\n            {icon}\n            {number}\n          </span>\n        </strong>\n        <span className=\"fixed-color name\">\n          {name}\n        </span>\n      </GithubLink>\n    </>\n  )\n}\n\nexport default GithubDetailLink;\n","import { styled } from '@mui/material/styles';\n\nconst Expander = styled(\"button\")`\n& {\n  display: inline-block;\n  height: 12px;\n  padding: 0 5px 5px;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 6px;\n  color: #c9d1d9;\n  text-decoration: none;\n  vertical-align: middle;\n  background-color: rgba(110, 118, 129, 0.4);\n  border: 0;\n  border-radius: 1px;\n  cursor: pointer;\n}\n&:hover {\n  background-color: rgba(56, 129, 253, 0.4);\n  text-decoration: none;\n}\n&:active {\n  background-color: #1f6feb;\n}\n`\n\nexport default Expander;\n","import Toolbar from '@mui/material/Toolbar';\nimport { styled } from '@mui/material/styles';\n\nconst ListDirectoryToolbar = styled(Toolbar)`\n& {\n  border-bottom: 1px solid #21262d;\n  padding: 16px;\n  min-height: initial;\n  background: #161b22;\n  flex-wrap: wrap;\n}\n`\n\nexport default ListDirectoryToolbar;\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\n\nconst useCommits = () => {\n  const {\n    state: {\n      commits\n    }\n  } = React.useContext(repositoryContext);\n\n  const commitsMemo = React.useMemo(() => commits, [commits]);\n  const commitsNumberMemo = React.useMemo(() => commits.length, [commits]);\n\n  return [\n    commitsMemo,\n    commitsNumberMemo\n  ]\n}\n\nexport default useCommits\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport AvatarImg from '../assets/images/avatar.jpg';\nimport Typography from '@mui/material/Typography';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport CheckIcon from '@mui/icons-material/Check';\nimport HistoryIcon from '@mui/icons-material/History';\nimport Avatar from '@mui/material/Avatar';\nimport GithubDetailLink from './GithubDetailLink';\nimport GithubLink from './ui/GithubLink'\nimport Expander from './ui/Expander'\nimport ListDirectoryToolbar from './ui/ListDirectoryToolbar'\nimport useCommits from '../hooks/useCommits'\n\nconst ListDirectoryHeader = (props: any) => {\n  const [ , commitsNumber ] = useCommits();\n  const [ expend, setExpend ] = React.useState(false);\n  const welcomeMessage = 'Welcome to my website. Enjoy your stay at my website. Now open to work. You can hire me. Feel free to contact to me.'\n\n  return (\n    <>\n      <ListDirectoryToolbar>\n        <Grid\n          container\n          spacing={1}\n          flexWrap=\"nowrap\"\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            flex=\"none\"\n          >\n            <Avatar\n              alt=\"Jun Kumokawa\"\n              title=\"Jun Kumokawa\"\n              src={AvatarImg}\n              sx={{height: 24, width: 24}}\n            />\n          </Grid>\n          <Grid\n            item\n            flex=\"none\"\n          >\n            <GithubLink\n              href=\"#\"\n            >\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n              >\n                kumokawa\n              </Typography>\n            </GithubLink>\n          </Grid>\n          <Grid\n            item\n            sx={{\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n              textOverflow: 'ellipsis'\n            }}\n            xs={8}\n          >\n            <GithubLink\n              href=\"#\"\n              title={welcomeMessage}\n            >\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n              >\n                {welcomeMessage}\n              </Typography>\n            </GithubLink>\n          </Grid>\n          <Grid\n            item\n            flex=\"none\"\n          >\n            <Expander onClick={() => setExpend(!expend)}>...</Expander>\n          </Grid>\n          <Grid\n            container\n            item\n            alignItems=\"center\"\n            spacing={1}\n            flex={0}\n            flexWrap=\"nowrap\"\n          >\n            <Grid\n              item\n              component={CheckIcon}\n              sx={{\n                color: '#3fd950',\n              }}\n            />\n            <Grid item>\n              <GithubLink\n                href=\"#\"\n              >\n                <Typography\n                  component=\"span\"\n                  sx={{\n                    fontSize: '12px'\n                  }}\n                >\n                  790b524\n                </Typography>\n              </GithubLink>\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            flex=\"none\"\n          >\n            <GithubLink\n              href=\"#\"\n            >\n              <Typography\n                component=\"span\"\n                sx={{\n                  fontSize: '14px'\n                }}\n              >\n                9 hours ago\n              </Typography>\n            </GithubLink>\n          </Grid>\n          <Grid\n            item\n            flex=\"none\"\n          >\n            <GithubDetailLink\n              href=\"#\"\n              icon={\n                <SvgIcon\n                  component={HistoryIcon}\n                />\n              }\n              number={commitsNumber}\n              name=\"commits\"\n            />\n          </Grid>\n        </Grid>\n        <Box\n          sx={{\n            display: expend ? 'initial': 'none',\n            width: '100%',\n            paddingLeft: 4\n          }}\n        >\n          <GithubLink href=\"#\" className=\"primary\">\n            {welcomeMessage}\n          </GithubLink>\n        </Box>\n      </ListDirectoryToolbar>\n    </>\n  )\n}\n\nexport default ListDirectoryHeader;\n","import Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\n\nconst ListFilesItemRow = styled(({ className, ...rest }: any) => (\n  <Grid\n    container\n    py={1}\n    px={2}\n    flexWrap=\"nowrap\"\n    alignItems=\"center\"\n    className={className + \" list-files-item-row\"}\n    {...rest}\n  />\n))`\n& {\n  border-top: 1px solid #21262d;\n  font-size: 14px;\n  line-height: 1.5;\n\n  .file_icon {\n    display: inline-flex;\n    flexBasis: 16px;\n    font-size: 16px;\n    color: #8b949e;\n  }\n  .commit-message {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .committed-time {\n    flexBasis: 100px;\n    text-align: right;\n  }\n}\n& > .MuiGrid-item {\n  white-space: nowrap;\n}\n& > .MuiGrid-item:not(:last-child) {\n  margin-right: 16px;\n}\n&:hover {\n  background: #161b22;\n}\n`\n\nexport default ListFilesItemRow;\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\nimport useShaToPath from '../hooks/useShaToPath'\nimport useCurrentBranch from '../hooks/useCurrentBranch'\n\nconst usePreviousSha = (sha: string) => {\n  const {\n    allTrees,\n  } = React.useContext(repositoryContext);\n  const getPathFromSha = useShaToPath();\n  const [ , currentBranchSha ] = useCurrentBranch();\n\n  return [\n    React.useMemo(() => {\n      if (allTrees.length === 0 || sha === \"\") {\n        return '';\n      }\n      if (allTrees.sha === sha) {\n        return sha;\n      }\n      const [ path ] = getPathFromSha(sha);\n      if (!path.includes('/')) {\n        return currentBranchSha\n      } else {\n        return allTrees.tree.find((t: any) => {\n          const parentPath = path.split('/');\n          parentPath.pop();\n          return t.path === parentPath.join('/')\n        }).sha\n      }\n    }, [\n      allTrees,\n      currentBranchSha,\n      getPathFromSha,\n      sha\n    ]),\n    React.useMemo(() => allTrees.sha === sha, [allTrees, sha])\n  ]\n}\n\nexport default usePreviousSha\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport GithubLink from './ui/GithubLink'\nimport ListFilesItemRow from './ui/ListFilesItemRow'\nimport { useNavigate } from \"react-router-dom\";\nimport moment from 'moment';\nimport { OctokitInstance } from './../plugins/Octokit';\nimport useShaToPath from '../hooks/useShaToPath'\nimport useCurrentBranch from '../hooks/useCurrentBranch'\nimport usePreviousSha from '../hooks/usePreviousSha'\nimport Loading from './Loading'\n\nconst ListDirectoryContent = (props: any) => {\n  const [ treeForDisplaies, setTreeForDisplaies ] = React.useState([]);\n  const [ loading, setLoading ] = React.useState(true);\n  const [ , currentBranchSha ] = useCurrentBranch();\n  const getPathFromSha = useShaToPath();\n  const {\n    sha,\n    trees,\n    type\n  } = props;\n  const [ previousSha, isRootSha ] = usePreviousSha(sha);\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    Promise.all(trees.map(async (tree: any) => {\n      return {\n        tree,\n        commit: await OctokitInstance.request('GET /repos/{owner}/{repo}/commits?path={path}&sha={sha}&per_page=1', {\n          owner: process.env.REACT_APP_REPOSITORY_OWNER as string,\n          repo: process.env.REACT_APP_REPOSITORY_NAME as string,\n          path: '/' + getPathFromSha(tree.sha)[0],\n          sha: currentBranchSha\n        })\n      }\n    }))\n    .then((responses: any) => {\n      return responses.map((response: any) => {\n        return {\n          subject: response.commit.data[0]?.commit?.message || '',\n          committerDate: response.commit.data[0]?.commit?.committer?.date || '',\n          fileType: response.tree.type,\n          path: response.tree.path,\n          sha: response.tree.sha\n        }\n      })\n    })\n    .then(setTreeForDisplaies)\n    .finally(() => setLoading(false))\n  }, [\n    trees,\n    currentBranchSha,\n    getPathFromSha\n  ])\n\n  const fileTypeIcon: any = React.useCallback((fileType: string) => {\n    if (fileType === 'blob') {\n      return InsertDriveFileOutlinedIcon\n    } else if (fileType === 'tree') {\n      return FolderIcon\n    } else {\n      return <></>\n    }\n  }, [])\n\n  if (type !== 'tree') return null;\n\n  return (\n    <Loading loading={loading}>\n      <Grid\n        container\n        flexDirection=\"column\"\n      >\n        <ListFilesItemRow\n          container\n          sx={{\n            display: isRootSha ? \"none !important\" : \"inherit\"\n          }}\n        >\n          <Grid item flex=\"none\">\n            <GithubLink\n              href=\"#\"\n              className=\"active\"\n              sx={{\n                minWidth: 16,\n                fontSize: 14,\n                fontWeight: 600,\n                textAlign: 'center'\n              }}\n              onClick={(e: any) => {\n                e.preventDefault();\n                navigate('/tree/' + previousSha)\n              }}\n            >\n              <Box\n                component=\"span\"\n                display=\"inline-block\"\n              >\n                ..\n              </Box>\n            </GithubLink>\n          </Grid>\n          <Grid item flex={1}>\n          </Grid>\n        </ListFilesItemRow>\n        {treeForDisplaies.map((tree: any, index: number) => {\n          const {\n            fileType,\n            path,\n            sha,\n            subject,\n            committerDate\n          } = tree;\n          if (['blob', 'tree'].includes(fileType) === false) {\n            return null;\n          }\n\n          const href = [\n            fileType,\n            sha\n          ]\n            .filter((p: string) => p !== \"\")\n            .join('/')\n\n          return (\n            <ListFilesItemRow key={index}>\n              <Grid\n                item\n                className=\"file_icon\"\n                component={fileTypeIcon(fileType)}\n              />\n              <Grid item xs={3}>\n                <GithubLink href={\"#\"} onClick={(e: any) => {\n                  e.preventDefault();\n                  navigate('/' + href)\n                }}>\n                  {path}\n                </GithubLink>\n              </Grid>\n              <Grid item xs={8} className=\"commit-message\">\n                <GithubLink href=\"#\">\n                  {subject}\n                </GithubLink>\n              </Grid>\n              <Grid item className=\"committed-time\">\n                {moment(committerDate).fromNow()}\n              </Grid>\n            </ListFilesItemRow>\n          )\n        })}\n      </Grid>\n    </Loading>\n  )\n}\n\nexport default ListDirectoryContent;\n","import React from 'react';\nimport Paper from '@mui/material/Paper';\nimport ListDirectoryHeader from './ListDirectoryHeader'\nimport ListDirectoryContent from './ListDirectoryContent'\n\nconst ListDirectory = (props: any) => {\n  const {\n    type,\n    sha,\n    trees\n  } = props;\n\n  return (\n    <>\n      <span id=\"files\" />\n      <Paper\n        variant=\"outlined\"\n        sx={{\n          margin: '1rem 0',\n          color: 'inherit'\n        }}\n      >\n        <ListDirectoryHeader />\n        <ListDirectoryContent\n          sha={sha}\n          trees={trees}\n          type={type}\n        />\n      </Paper>\n    </>\n  )\n}\n\nexport default ListDirectory;\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst Loading = (props: any) => {\n  const {\n    children,\n    loading\n  } = props;\n\n  if (loading) {\n    return <Grid\n      container\n      justifyContent=\"center\"\n      p={2}\n    >\n      <Grid item>\n        <CircularProgress />\n      </Grid>\n    </Grid>\n  } else {\n    return children;\n  }\n\n}\n\nexport default Loading;\n","import { styled } from '@mui/material/styles';\n\nconst GithubButton = styled(({className, ...rest}: any) => (\n  <a className={className + \" github-button\"} {...rest} />\n))`\n& {\n  position: relative;\n  padding: 5px 16px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  white-space: nowrap;\n  border: 1px solid;\n  border-radius: 6px;\n  color: #c9d1d9;\n  background-color: #21262d;\n  border-color: rgba(240, 246, 252, 0.1);\n  box-shadow: 0 0 transparent;\n  transition: .2s cubic-bezier(0.3, 0, 0.5, 1);\n  transition-property: all;\n  transition-property: color,background-color,border-color;\n  cursor: pointer;\n  text-decoration: none;\n  user-select: none;\n  display: inline-block;\n}\n&.primary {\n  color: #FFFFFF;\n  background-color: #238636;\n  border-color: rgba(240,246,252,0.1);\n  box-shadow: 0 0 transparent;\n}\n& > svg {\n  vertical-align: text-bottom;\n  font-size: 16px;\n}\n& > span {\n  vertical-align: top;\n}\n& > :not(:last-child) {\n  margin-right: 4px;\n}\n&:hover {\n  background-color: #30363d;\n  border-color: #8b949e;\n  transition-duration: .1s;\n  text-decoration: none !important;\n}\n&.primary:hover {\n  background-color: #2ea043;\n  border-color: rgba(240,246,252,0.1);\n}\n&:active {\n  background-color: hsla(212,12%,18%,1);\n  border-color: #6e7871;\n  transition-duration: .1s;\n}\n&.primary:active {\n  background-color: #238636;\n  box-shadow: 0 0 transparent;\n}\n`\n\nexport default GithubButton;\n","import React from 'react';\nimport { OctokitInstance } from './../plugins/Octokit';\n\nexport interface RepositoryInterface {\n  branches: any,\n  tags: any,\n  commits: any,\n}\nexport interface RepositoryBranchInterface {\n  selectedBranch: string\n}\n\nexport const repositoryContext = React.createContext<any>({});\nexport const { Provider, Consumer } = repositoryContext;\n\nconst initial = {\n  repository: {},\n  branches: [],\n  tags: [],\n  commits: []\n}\nexport function RepositoryProvider({ children }: any) {\n  const [ state, dispatch ] = React.useState<any>(initial);\n  const [ selectedBranch, changeBranch ] = React.useState<any>({\n    name: '',\n    commit: {\n      sha: '',\n      url: ''\n    }\n  });\n  const [ allTrees, setAllTrees ] = React.useState<any>([]);\n\n  async function getAllData(uri: string) {\n    let p = 1\n    let arr: any = [];\n    while (true) {\n      const { data } = await OctokitInstance.request(`${uri}?per_page={per_page}&page={page}`, {\n        owner: process.env.REACT_APP_REPOSITORY_OWNER as string,\n        repo: process.env.REACT_APP_REPOSITORY_NAME as string,\n        per_page: 100,\n        page: p\n      })\n      if (data.length === 0 || p === 5) {\n        break;\n      } else {\n        arr = arr.concat(data);\n        p += 1\n      }\n    }\n    return arr;\n  }\n\n  React.useEffect(() => {\n    OctokitInstance.request('GET /repos/{owner}/{repo}', {\n      owner: process.env.REACT_APP_REPOSITORY_OWNER as string,\n      repo: process.env.REACT_APP_REPOSITORY_NAME as string\n    })\n    .then(repository => {\n      const { data } = repository;\n      dispatch((prev: any) => {\n        return {\n          ...prev,\n          repository: data\n        }\n      })\n    })\n  }, [])\n\n  React.useEffect(() => {\n    getAllData('GET /repos/{owner}/{repo}/branches')\n    .then((branches: any) => {\n      dispatch((prev: any) => {\n        return {\n          ...prev,\n          branches: branches\n        }\n      })\n    })\n  }, [])\n  React.useEffect(() => {\n    getAllData('GET /repos/{owner}/{repo}/tags')\n    .then((tags: any) => {\n      dispatch((prev: any) => {\n        return {\n          ...prev,\n          tags: tags\n        }\n      })\n    })\n  }, [])\n  React.useEffect(() => {\n    getAllData('GET /repos/{owner}/{repo}/commits')\n    .then((commits: any) => {\n      dispatch((prev: any) => {\n        return {\n          ...prev,\n          commits: commits\n        }\n      })\n    })\n  }, [])\n  React.useEffect(() => {\n    if (state.repository.default_branch === undefined) {\n      return;\n    }\n    changeBranch(state.branches.find((b: any) => b.name === state.repository.default_branch))\n  }, [\n    state.repository,\n    state.branches\n  ])\n\n  React.useEffect(() => {\n    if (selectedBranch === undefined) {\n      return;\n    }\n    if (selectedBranch.commit.sha === '') {\n      return;\n    }\n    OctokitInstance.request('GET /repos/{owner}/{repo}/git/trees/{tree_sha}?recursive=1', {\n      owner: process.env.REACT_APP_REPOSITORY_OWNER as string,\n      repo: process.env.REACT_APP_REPOSITORY_NAME as string,\n      tree_sha: selectedBranch.commit.sha\n    })\n    .then(({ data }) => {\n      setAllTrees(data)\n    })\n  }, [\n    selectedBranch\n  ])\n\n  return (\n    <>\n      <Provider\n        value={{\n          state,\n          dispatch,\n          selectedBranch,\n          changeBranch,\n          allTrees,\n        }}>\n        {children}\n      </Provider>\n    </>\n  )\n}\nexport {\n  Consumer as RepositoryConsumer\n}\nexport default RepositoryProvider;\n\n// vim: sw=2:ai\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\n\nconst useCurrentBranch = () => {\n  const {\n    selectedBranch,\n    changeBranch\n  } = React.useContext(repositoryContext);\n\n  return [\n    React.useMemo(() => {\n      if (selectedBranch === undefined) return '';\n      return selectedBranch.name || ''\n    }, [selectedBranch]),\n    React.useMemo(() => {\n      if (selectedBranch === undefined) return '';\n      return selectedBranch.commit.sha || ''\n    }, [selectedBranch]),\n    selectedBranch,\n    changeBranch\n  ]\n}\n\nexport default useCurrentBranch\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\n\nconst usePathToSha = () => {\n  const {\n    allTrees\n  } = React.useContext(repositoryContext);\n\n  const getShafromPath = React.useCallback((path: string) => {\n    if (allTrees.length === 0) {\n      return;\n    }\n    const result = allTrees.tree.find((t: any) => {\n      return t.path === path\n    });\n    if (result === undefined) {\n      return ''\n    }\n    return result.sha\n  }, [\n    allTrees\n  ])\n\n  return getShafromPath\n}\n\nexport default usePathToSha\n","import React from 'react';\nimport { repositoryContext } from '../contexts/repository';\n\nconst useShaToPath = () => {\n  const {\n    allTrees,\n    selectedBranch\n  } = React.useContext(repositoryContext);\n\n  const getPathFromSha = React.useCallback((sha: string) => {\n    if (allTrees.length === 0) {\n      return [\n        undefined,\n        undefined\n      ]\n    }\n    const result = allTrees.tree.find((t: any) => {\n      return t.sha === sha\n    });\n    if (result === undefined) {\n      return [\n        '',\n        selectedBranch.commit.sha === sha\n      ]\n    }\n    return [\n      result.path,\n      false\n    ]\n  }, [\n    allTrees,\n    selectedBranch\n  ])\n\n  return getPathFromSha\n}\n\nexport default useShaToPath\n","import { Octokit } from '@octokit/core'\n\nexport const OctokitInstance = new Octokit({\n  auth: process.env.NODE_ENV !== 'production' && process.env.REACT_APP_GITHUB_APIKEY\n});\n"],"names":["createSvgIcon","fillRule","d","styled","className","children","rest","Box","sx","zIndex","theme","drawer","Tabs","TabPanel","filteringText","branches","React","repositoryContext","state","filter","branch","name","includes","tags","length","props","open","selectedTab","setSelectedTab","searchingWords","setSearchingWords","useCurrentBranch","currentBranchName","changeBranch","useFilterBranches","filteredBranches","useFilterTags","filteredTags","useTags","tagsNumber","placeholderMemo","renderList","filteredItems","map","item","index","ListItem","disablePadding","ListItemButton","onClick","ListItemIcon","Check","display","ListItemText","primary","disableTypography","Grid","p","pl","container","component","flex","fontWeight","IconButton","SvgIcon","CloseIcon","fontSize","flexDirection","placeholder","value","onChange","target","TabContext","String","_","newValue","Tab","label","disableRipple","List","disableGutters","Typography","justifyContent","setOpen","ClickAwayListener","onClickAway","GithubButton","GitBranchIcon","viewBox","maxWidth","overflow","textOverflow","whiteSpace","ArrowDropDownIcon","GithubCloneModal","ref","inputBaseProps","buttonProps","InputBase","Button","variant","copyText","defaultIcon","CopyIcon","afterClickedIcon","CheckIcon","color","clicked","setClicked","icon","setIcon","setTimeout","py","e","select","navigator","clipboard","writeText","Menus","menuId","keyName","subtitle","setMenuId","setCopyText","repository","undefined","mt","TabMenu","menus","val","TerminalIcon","marginRight","ml","Tooltip","title","GithubLink","href","HelpOutlineOutlinedIcon","borderTop","textDecoration","ZipIcon","mr","mode","sha","navigate","useNavigate","useBranches","branchesNumber","getShafromPath","usePathToSha","getPathFromSha","useShaToPath","RenderDom","GithubDetailLink","number","LocalOfferOutlinedIcon","path","uris","split","lastUri","pop","Breadcrumbs","marginLeft","preventDefault","process","uri","self","slice","encodeURIComponent","join","MoreHorizIcon","alignItems","namedHeadings","md","ids","tokens","forEach","token","i","type","text","renderer","render","options","id","kebabcase","unidecode","uniqId","uncollide","attr","idx","attrIndex","attrPush","attrs","setAttr","core","ruler","push","bind","MarkdownIt","use","MarkdownItHighlightjs","breaks","inline","hljs","Highlightjs","MarkdownItNamedHeadings","MarkdownItEmoji","defs","japan","estonia","earth","thinking","marginX","marginY","dangerouslySetInnerHTML","__html","extention","content","binary","image","mime","filename","btoa","download","src","supportedLangeage","line","language","Toolbar","loading","mimeTypes","Paper","margin","Loading","commits","useCommits","commitsNumber","expend","setExpend","welcomeMessage","spacing","flexWrap","Avatar","alt","AvatarImg","height","width","xs","HistoryIcon","paddingLeft","px","allTrees","currentBranchSha","tree","find","t","parentPath","treeForDisplaies","setTreeForDisplaies","setLoading","trees","usePreviousSha","previousSha","isRootSha","Promise","all","OctokitInstance","owner","repo","commit","then","responses","response","subject","data","message","committerDate","committer","date","fileType","finally","fileTypeIcon","InsertDriveFileOutlinedIcon","FolderIcon","minWidth","textAlign","moment","fromNow","Provider","Consumer","initial","RepositoryProvider","dispatch","url","selectedBranch","setAllTrees","getAllData","arr","per_page","page","concat","prev","default_branch","b","tree_sha","result","Octokit","auth"],"sourceRoot":""}