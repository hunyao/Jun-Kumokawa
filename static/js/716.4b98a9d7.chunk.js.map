{"version":3,"file":"static/js/716.4b98a9d7.chunk.js","mappings":"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","sources":["components/ui/discussion/Discussion.tsx","components/ui/discussion/DiscussionContent.tsx","components/ui/discussion/DiscussionSidebar.tsx","components/ui/discussion/DiscussionSidebarItem.tsx","components/ui/discussion/DiscussionItem.tsx","components/ui/discussion/DiscussionItemAvator.tsx","components/ui/discussion/DiscussionItemContent.tsx","components/ui/discussion/DiscussionItemContentHeader.tsx","components/ui/discussion/DiscussionTimelineItem.tsx","components/ui/discussion/DiscussionTimelineItemBadge.tsx","components/ui/discussion/DiscussionTimelineItemBody.tsx","components/ui/discussion/AdditionalInformation.tsx","components/ui/discussion/AdditionalInformationSummary.tsx","components/ui/discussion/AdditionalInformationDetails.tsx","components/Discussion.tsx","pages/home/experience.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst Discussion = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion\"} {...rest} />\n))`\n& {\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: row;\n  gap: 24px;\n  align-items: end;\n}\n& .discussion-username {\n  font-weight: 900;\n  color: #c9d1d9;\n}\n`\n\nexport default Discussion\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionContent = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-content\"} {...rest} />\n))`\n& {\n  flex-basis: 75%;\n  flex-grow: 0;\n  max-width: 75%;\n  margin: 0 0 0 40px;\n  padding-left: 16px;\n  border-bottom: 2px solid #30363d;\n}\n`\n\nexport default DiscussionContent\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionSidebar = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-sidebar\"} {...rest} />\n))`\n& {\n  flex-basis: 25%;\n  flex-grow: 0;\n  max-width: 25%;\n  margin: 0;\n}\n`\n\nexport default DiscussionSidebar\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionSidebarItem = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-sidebar-item\"} {...rest} />\n))`\n& {\n  padding-top: 16px;\n  font-size: 12px;\n  color: #8b949e;\n}\n&+& {\n  margin-top: 16px;\n  border-top: 1px solid #21262d;\n}\n& .discussion-sidebar-item-header {\n  font-weight: 900;\n  margin-bottom: 8px;\n  color: #c9d1d9;\n}\n`\n\nexport default DiscussionSidebarItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionItem = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-item\"} {...rest} />\n))`\n& {\n  position: relative;\n  display: flex;\n  padding-bottom: 16px;\n  margin-left: 16px;\n  width: 100%;\n}\n&:before {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 2px;\n  content: \"\";\n  background-color: #21262d;\n}\n`\n\nexport default DiscussionItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionItemAvator = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-item-avator\"} {...rest} />\n))`\n& {\n  position: absolute;\n  left: -72px;\n}\n& > .discussion-item-avator-img {\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n}\n`\n\nexport default DiscussionItemAvator\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionItemContent = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-item-content\"} {...rest} />\n))`\n& {\n  margin-left: -16px;\n  position: relative;\n  color: #c9d1d9;\n  background: #0d1117;\n  border: 1px solid #30363d;\n  border-radius: 6px;\n  width: 100%;\n}\n&:before, &:after {\n  position: absolute;\n  top: 11px;\n  right: 100%;\n  left: -8px;\n  width: 8px;\n  height: 16px;\n  pointer-events: none;\n  content: \" \";\n  clip-path: polygon(0 50%, 100% 0, 100% 100%);\n  color: #c9d1d9;\n}\n&:before {\n  background-color: #30363d;\n}\n&:after {\n  margin-left: 1px;\n  background-color: #0d1117;\n  background-image: linear-gradient(#161b22, #161b22);\n}\n`\n\nexport default DiscussionItemContent\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionItemContentHeader = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-item-content-header\"} {...rest} />\n))`\n& {\n  display: flex;\n  padding-left: 16px;\n  padding-right: 16px;\n  align-items: center;\n  color: #8b949e;\n  background: #161b22;\n  border-bottom: 1px solid #30363d;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n`\n\nexport default DiscussionItemContentHeader\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionTimelineItem = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-timeline-item\"} {...rest} />\n))`\n& {\n  position: relative;\n  display: flex;\n  padding: 16px 0;\n  margin-left: 16px;\n  color: #8b949e;\n}\n&:before {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n  width: 2px;\n  content: \"\";\n  background-color: #21262d;\n}\n`\n\nexport default DiscussionTimelineItem\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionTimelineItemBadge = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-timeline-item-badge\"} {...rest} />\n))`\n& {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  margin-left: -15px;\n  align-items: center;\n  background-color: #21262d;\n  border: 2px solid #0d1117;\n  border-radius: 50%;\n  justify-content: center;\n  flex-shrink: 0;\n}\n& > svg {\n  font-size: 16px;\n}\n`\n\nexport default DiscussionTimelineItemBadge\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst DiscussionTimelineItemBody = styled(({ className, ...rest }: any) => (\n  <div className={className + \" discussion-timeline-item-body\"} {...rest} />\n))`\n& {\n  min-width: 0;\n  max-width: 100%;\n  margin-top: 4px;\n  flex: auto;\n}\n`\n\nexport default DiscussionTimelineItemBody\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordion from '@mui/material/Accordion';\n\nconst AdditionalInformation = styled(({ className, ...rest }: any) => (\n  <MuiAccordion disableGutters elevation={0} square className={className + \" additional-information\"} {...rest} />\n))(({ theme }) => ({\n  borderTop: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nexport default AdditionalInformation\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport CheckIcon from '@mui/icons-material/Check';\n\nconst AdditionalInformationSummary = styled(({className, ...rest}: any) => (\n  <MuiAccordionSummary\n    expandIcon={<CheckIcon />}\n    className={className + \" additional-information-summary\"}\n    {...rest}\n  />\n))(({ theme }) => ({\n  backgroundColor: '#161b22',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(0deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    margin: 0,\n    marginLeft: theme.spacing(1),\n  },\n  fontSize: 13,\n  minHeight: 40,\n  '& svg': {\n    fontSize: 16,\n    color: '#3fb950'\n  }\n}));\n\nexport default AdditionalInformationSummary\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\n\nconst AdditionalInformationDetails = styled(({className, ...rest}: any) => (\n  <MuiAccordionDetails className={className + \" additional-information-details\"} {...rest} />\n))(({ theme }) => ({\n  padding: 0,\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n  '& .MuiList-root': {\n    padding: 0,\n    maxHeight: 390,\n    overflowY: 'auto',\n    '& .MuiListItem-root': {\n      borderTop: `1px solid ${theme.palette.divider}`,\n      '& .MuiListItemText-root': {\n        whiteSpace: 'break-spaces'\n      }\n    }\n  }\n}));\n\nexport default AdditionalInformationDetails\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport MuiList from '@mui/material/List';\nimport MuiListItem from '@mui/material/ListItem';\nimport MuiListItemText from '@mui/material/ListItemText';\nimport Discussion from './ui/discussion/Discussion'\nimport DiscussionContent from './ui/discussion/DiscussionContent'\nimport DiscussionSidebar from './ui/discussion/DiscussionSidebar'\nimport DiscussionSidebarItem from './ui/discussion/DiscussionSidebarItem'\nimport DiscussionItem from './ui/discussion/DiscussionItem'\nimport DiscussionItemAvator from './ui/discussion/DiscussionItemAvator'\nimport DiscussionItemContent from './ui/discussion/DiscussionItemContent'\nimport DiscussionItemContentHeader from './ui/discussion/DiscussionItemContentHeader'\nimport DiscussionTimelineItem from './ui/discussion/DiscussionTimelineItem'\nimport DiscussionTimelineItemBadge from './ui/discussion/DiscussionTimelineItemBadge'\nimport DiscussionTimelineItemBody from './ui/discussion/DiscussionTimelineItemBody'\nimport AdditionalInformation from './ui/discussion/AdditionalInformation'\nimport AdditionalInformationSummary from './ui/discussion/AdditionalInformationSummary'\nimport AdditionalInformationDetails from './ui/discussion/AdditionalInformationDetails'\n\nconst DiscussionComponent = (props: any) => {\n  const [expanded, setExpanded] = React.useState('');\n\n  const handleChange = (panel: any) => (event: any, newExpanded: any) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n  const {\n    username,\n    avator,\n    title,\n    content,\n    timelineItems = [],\n    sidebarItems = [],\n    additionalItems = []\n  } = props;\n\n  return (\n    <>\n      <Discussion>\n        <DiscussionContent>\n          {timelineItems\n            .map((timelineItem: any, index: number) => (\n              <DiscussionTimelineItem key={index}>\n                <DiscussionTimelineItemBadge>\n                  <SvgIcon component={timelineItem.icon} />\n                </DiscussionTimelineItemBadge>\n                <DiscussionTimelineItemBody>\n                  <Box display=\"inline-block\">\n                    <Box\n                      component=\"img\"\n                      src={avator}\n                      height={20}\n                      width={20}\n                      sx={{\n                        borderRadius: '50%',\n                        verticalAlign: 'middle'\n                      }}\n                      display=\"inline-block\"\n                    />\n                  </Box> <Typography\n                    component=\"span\"\n                    className=\"discussion-username\"\n                  >\n                    {username}\n                  </Typography> <Typography\n                    component=\"span\"\n                  >\n                    {timelineItem.text}\n                  </Typography>\n                </DiscussionTimelineItemBody>\n              </DiscussionTimelineItem>\n            ))}\n          <DiscussionItem>\n            <DiscussionItemAvator>\n              <Box\n                component=\"img\"\n                src={avator}\n                className=\"discussion-item-avator-img\"\n              />\n            </DiscussionItemAvator>\n            <DiscussionItemContent>\n              <DiscussionItemContentHeader>\n                <Typography\n                  component=\"h3\"\n                  pt={1}\n                  pb={1}\n                  flex=\"auto\"\n                >\n                  <span className=\"discussion-username\">{username}</span> {title}\n                </Typography>\n              </DiscussionItemContentHeader>\n              <Box\n                className=\"discussion-item-content-body\"\n              >\n                <Box\n                  p={2}\n                  sx={{\n                    wordBreak: 'break-word'\n                  }}\n                >\n                  {content}\n                </Box>\n                <Box\n                  sx={{\n                    borderBottomLeftRadius: '6px',\n                    borderBottomRightRadius: '6px',\n                    overflow: 'hidden'\n                  }}\n                >\n                  {additionalItems.map((additionalItem: any, index: number) => (\n                    <AdditionalInformation\n                      expanded={expanded === ('panel' + index)}\n                      onChange={handleChange('panel' + index)}\n                      key={index}\n                    >\n                      <AdditionalInformationSummary>\n                        <span style={{flex: 'auto'}}>{additionalItem.title}</span>\n                        <span>Details</span>\n                      </AdditionalInformationSummary>\n                      <AdditionalInformationDetails>\n                        <MuiList>\n                          {additionalItem.items.map((item: any, index: number) => (\n                            <MuiListItem key={index}>\n                              <MuiListItemText primary={item} />\n                            </MuiListItem>\n                          ))}\n                        </MuiList>\n                      </AdditionalInformationDetails>\n                    </AdditionalInformation>\n                  ))}\n                </Box>\n              </Box>\n            </DiscussionItemContent>\n          </DiscussionItem>\n        </DiscussionContent>\n        <DiscussionSidebar>\n          {sidebarItems.map(([ title, text ]: any, index: number) => (\n            <DiscussionSidebarItem key={index}>\n              <Box\n                className=\"discussion-sidebar-item-header\"\n              >\n                {title}\n              </Box>\n              <Box\n                className=\"discussion-sidebar-item-body\"\n              >\n                {text}\n              </Box>\n            </DiscussionSidebarItem>\n          ))}\n        </DiscussionSidebar>\n      </Discussion>\n    </>\n  )\n}\n\nexport default DiscussionComponent;\n","import Box from '@mui/material/Box';\nimport AvatarImg from '../../assets/images/avator.jpg';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport LoginIcon from '@mui/icons-material/Login';\nimport moment from 'moment';\nimport DiscussionComponent from '../../components/Discussion';\nimport LinkGoogleMap from '../../components/LinkGoogleMap';\n\nconst Experience = () => {\n  return (\n    <>\n      <Box\n        mt={2}\n      >\n        <DiscussionComponent\n          username=\"kumokawa\"\n          avator={AvatarImg}\n          title={'became freelance ' + moment('2016-01-01T00:00:00+0900').fromNow()}\n          content='I belonged to a team that managing a lot of in-house systems everybody use in house: mailing-lists, servers, SSL-certificates, and so on. and worked mainly on projects that developing and maintaining front-end and back-end on mobile games and ordering systems. and managed junior co-workers.'\n          timelineItems={[\n            {\n              icon: LoginIcon,\n              text: 'became freelance ' + moment('2016-01-01T00:00:00+0900').fromNow()\n            }\n          ]}\n          sidebarItems={[\n            [\n              'Employment type',\n              'Freelance'\n            ],\n            [\n              'Became and end date',\n              'Jan 2016 - present'\n            ],\n            [\n              'Location',\n              <LinkGoogleMap>Fukuoka, Japan</LinkGoogleMap>,\n            ],\n            [\n              'Homepage',\n              'The website right now you are looking at'\n            ]\n          ]}\n          additionalItems={[\n            {\n              title: 'I had responsebilities at the company:',\n              items: [\n                'designing, coding, testing',\n                'developing and maintaining Apis, Management screens, converting to pdf from data',\n                'managing all Linux servers they have with ssh\\n - crating a new account on a server',\n                'designing, coding, testing',\n                'developing and maintaining Apis, Management screens, converting to pdf from data',\n                'managing all Linux servers they have with ssh\\n - crating a new account on a server',\n                'designing, coding, testing',\n                'developing and maintaining Apis, Management screens, converting to pdf from data',\n                'managing all Linux servers they have with ssh\\n - crating a new account on a server',\n              ]\n            },\n            {\n              title: 'I used technologies at the company:',\n              items: [\n                'Git',\n                'Subversion',\n                'HTML',\n                'CSS',\n                'JavaScript',\n                'Git',\n                'Subversion',\n                'Git',\n                'Subversion',\n                'HTML',\n                'CSS',\n                'JavaScript',\n                'Git',\n                'Subversion',\n                '...and so on'\n              ]\n            }\n          ]}\n        />\n        <DiscussionComponent\n          username=\"kumokawa\"\n          avator={AvatarImg}\n          title={'joined CLINKS Co. Ltd. ' + moment('2012-04-01T00:00:00+0900').fromNow()}\n          content='I belonged to a team that managing a lot of in-house systems everybody use in house: mailing-lists, servers, SSL-certificates, and so on. and worked mainly on projects that developing and maintaining front-end and back-end on mobile games and ordering systems. and managed junior co-workers.'\n          timelineItems={[\n            {\n              icon: LogoutIcon,\n              text: 'left CLINKS Co. Ltd. ' + moment('2015-04-01T00:00:00+0900').fromNow()\n            },\n            {\n              icon: LoginIcon,\n              text: 'joined CLINKS Co. Ltd. ' + moment('2012-04-01T00:00:00+0900').fromNow()\n            },\n          ]}\n          sidebarItems={[\n            [\n              'Company Name',\n              'CLINKS Co. Ltd.'\n            ],\n            [\n              'Employment type',\n              'Permanent'\n            ],\n            [\n              'Joined and left date',\n              'April 2012 - April 2015'\n            ],\n            [\n              'Location',\n              <LinkGoogleMap>Tokyo, Japan</LinkGoogleMap>,\n            ],\n            [\n              'Homepage',\n              'https://www.clinks.jp/'\n            ],\n          ]}\n          additionalItems={[\n            {\n              title: 'I had responsebilities at the company:',\n              items: [\n                'designing, coding, testing',\n                'developing and maintaining Apis, Management screens, converting to pdf from data',\n                'managing all Linux servers they have with ssh\\n - crating a new account on a server',\n                'designing, coding, testing',\n                'developing and maintaining Apis, Management screens, converting to pdf from data',\n                'managing all Linux servers they have with ssh\\n - crating a new account on a server',\n                'designing, coding, testing',\n                'developing and maintaining Apis, Management screens, converting to pdf from data',\n                'managing all Linux servers they have with ssh\\n - crating a new account on a server',\n              ]\n            },\n            {\n              title: 'I used technologies at the company:',\n              items: [\n                'Git',\n                'Subversion',\n                'HTML',\n                'CSS',\n                'JavaScript',\n                'Git',\n                'Subversion',\n                'Git',\n                'Subversion',\n                'HTML',\n                'CSS',\n                'JavaScript',\n                'Git',\n                'Subversion',\n                '...and so on'\n              ]\n            }\n          ]}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default Experience;\n"],"names":["styled","className","rest","disableGutters","elevation","square","theme","borderTop","palette","divider","borderBottom","display","expandIcon","Check","backgroundColor","flexDirection","transform","margin","marginLeft","spacing","fontSize","minHeight","color","padding","maxHeight","overflowY","whiteSpace","props","React","expanded","setExpanded","username","avator","title","content","timelineItems","sidebarItems","additionalItems","map","timelineItem","index","SvgIcon","component","icon","Box","src","height","width","sx","borderRadius","verticalAlign","Typography","text","pt","pb","flex","p","wordBreak","borderBottomLeftRadius","borderBottomRightRadius","overflow","additionalItem","onChange","panel","event","newExpanded","style","items","item","primary","mt","AvatarImg","moment","fromNow","LoginIcon","LogoutIcon"],"sourceRoot":""}